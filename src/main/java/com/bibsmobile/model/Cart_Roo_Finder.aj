// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.bibsmobile.model;

import com.bibsmobile.model.Cart;
import com.bibsmobile.model.UserProfile;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Cart_Roo_Finder {
    
    public static Long Cart.countFindCartsByUser(UserProfile user) {
        if (user == null) throw new IllegalArgumentException("The user argument is required");
        EntityManager em = Cart.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM Cart AS o WHERE o.user = :user", Long.class);
        q.setParameter("user", user);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<Cart> Cart.findCartsByUser(UserProfile user) {
        if (user == null) throw new IllegalArgumentException("The user argument is required");
        EntityManager em = Cart.entityManager();
        TypedQuery<Cart> q = em.createQuery("SELECT o FROM Cart AS o WHERE o.user = :user", Cart.class);
        q.setParameter("user", user);
        return q;
    }
    
    public static TypedQuery<Cart> Cart.findCartsByUser(UserProfile user, String sortFieldName, String sortOrder) {
        if (user == null) throw new IllegalArgumentException("The user argument is required");
        EntityManager em = Cart.entityManager();
        String jpaQuery = "SELECT o FROM Cart AS o WHERE o.user = :user";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        TypedQuery<Cart> q = em.createQuery(jpaQuery, Cart.class);
        q.setParameter("user", user);
        return q;
    }
    
}
