/**
 * 
 */
package com.bibsmobile.model;

import java.util.Collection;
import java.util.Date;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToOne;
import javax.persistence.Entity;

import flexjson.JSONSerializer;

/**
 * Copy of a badge earned by a user.
 * @author galen
 *
 */
@Entity
public class UserBadge {
	/**
	 * Autogenerated id
	 */
	@Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;
	
	@ManyToOne
	private Badge badge;
	
	@ManyToOne
	private UserProfile user;
	
	private Date created;
	
	/**
	 * Set false to stop users from flickering on a boundary
	 * to exploit the rewards system. Do not delete badges, merely set
	 * them false.
	 */
	private boolean active=true;

	/**
	 * @return the id
	 */
	public Long getId() {
		return id;
	}

	/**
	 * @param id the id to set
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * @return the badge
	 */
	public Badge getBadge() {
		return badge;
	}

	/**
	 * @param badge the badge to set
	 */
	public void setBadge(Badge badge) {
		this.badge = badge;
	}

	/**
	 * @return the user
	 */
	public UserProfile getUser() {
		return user;
	}

	/**
	 * @param user the user to set
	 */
	public void setUser(UserProfile user) {
		this.user = user;
	}

	/**
	 * @return the created
	 */
	public Date getCreated() {
		return created;
	}

	/**
	 * @param created the created to set
	 */
	public void setCreated(Date created) {
		this.created = created;
	}

	/**
	 * @return the active
	 */
	public boolean isActive() {
		return active;
	}

	/**
	 * @param active the active to set
	 */
	public void setActive(boolean active) {
		this.active = active;
	}
	
    public static String toJsonArray(Collection<UserBadge> collection) {
        return new JSONSerializer().exclude("*.class").serialize(collection);
    }
    
    public static String toJsonArrayWithoutUser(Collection<UserBadge> collection) {
        return new JSONSerializer().exclude("user.*").exclude("user").exclude("*.class").serialize(collection);
    }
}
