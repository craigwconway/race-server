// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.bibsmobile.model;

import com.bibsmobile.model.Event;
import com.bibsmobile.model.RaceResult;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect RaceResult_Roo_Finder {
    
    public static TypedQuery<RaceResult> RaceResult.findRaceResultsByEvent(Event event) {
        if (event == null) throw new IllegalArgumentException("The event argument is required");
        EntityManager em = RaceResult.entityManager();
        TypedQuery<RaceResult> q = em.createQuery("SELECT o FROM RaceResult AS o WHERE o.event = :event", RaceResult.class);
        q.setParameter("event", event);
        return q;
    }
    
    public static TypedQuery<RaceResult> RaceResult.findRaceResultsByEventAndBibEquals(Event event, String bib) {
        if (event == null) throw new IllegalArgumentException("The event argument is required");
        if (bib == null || bib.length() == 0) throw new IllegalArgumentException("The bib argument is required");
        EntityManager em = RaceResult.entityManager();
        TypedQuery<RaceResult> q = em.createQuery("SELECT o FROM RaceResult AS o WHERE o.event = :event AND o.bib = :bib", RaceResult.class);
        q.setParameter("event", event);
        q.setParameter("bib", bib);
        return q;
    }
    
}
