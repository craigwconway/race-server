// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.bibsmobile.model;

import com.bibsmobile.model.Event;
import com.bibsmobile.model.EventResult;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect EventResult_Roo_Finder {
    
    public static Long EventResult.countFindEventResultsByEvent(Event event) {
        if (event == null) throw new IllegalArgumentException("The event argument is required");
        EntityManager em = EventResult.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM EventResult AS o WHERE o.event = :event", Long.class);
        q.setParameter("event", event);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<EventResult> EventResult.findEventResultsByEvent(Event event) {
        if (event == null) throw new IllegalArgumentException("The event argument is required");
        EntityManager em = EventResult.entityManager();
        TypedQuery<EventResult> q = em.createQuery("SELECT o FROM EventResult AS o WHERE o.event = :event", EventResult.class);
        q.setParameter("event", event);
        return q;
    }
    
    public static TypedQuery<EventResult> EventResult.findEventResultsByEvent(Event event, String sortFieldName, String sortOrder) {
        if (event == null) throw new IllegalArgumentException("The event argument is required");
        EntityManager em = EventResult.entityManager();
        String jpaQuery = "SELECT o FROM EventResult AS o WHERE o.event = :event";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        TypedQuery<EventResult> q = em.createQuery(jpaQuery, EventResult.class);
        q.setParameter("event", event);
        return q;
    }
    
}
