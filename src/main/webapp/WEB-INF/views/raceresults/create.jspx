<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<div xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:field="urn:jsptagdir:/WEB-INF/tags/form/fields" xmlns:form="urn:jsptagdir:/WEB-INF/tags/form" xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:spring="http://www.springframework.org/tags" version="2.0">
<jsp:directive.page contentType="text/html;charset=UTF-8"/>
<jsp:output omit-xml-declaration="yes"/>
<style>
    #removetime{
        padding-bottom:8px;
    }
    .submit{
        margin: 1em auto;
        width: 500px;
        text-align: right;
    }
    input[type=number]::-webkit-inner-spin-button, 
    input[type=number]::-webkit-outer-spin-button { 
      -webkit-appearance: none; 
      margin: 0; 
    }
</style>
<div class="bibs-page bibs-bg-gray-1">
    <div class="ui very padded basic segment">
        <div id="added" style="display:none;color:#fff;background-color:#5cb85c;text-align:center;margin:5px;padding:5px;">Runner Added</div>
        <form:create id="fc_com_bibsmobile_model_RaceResult" modelAttribute="raceResult" path="/raceresults" render="${empty dependencies}" z="lDbQbfi+ahMJ+wsQw7rqYz4MxJc=">
        <div class="ui form" id="add-athlete-form" style="margin:0 auto; width:500px; text-align:center;">
            <h2 class="ui icon header">
                <i class="fa fa-cog"><!--  --></i>
                <div class="content">Add Athlete
                    <div class="sub header">Provide the details for this athlete.</div>
                    <div class="sub header">Event: ${event.name }</div>
                </div>
            </h2>
            <input name="event" value="${event.id}" style="display:none"><!--  --></input>
            <c:if test="${not empty eventTypes}">
                <div class="required field">
                    <div class="ui selection dropdown" id="eventtype-type">
                        <input name="eventType" type="hidden"><!--  --></input>
                        <i class="fa fa-caret-down right-icon"><!--  --></i>
                        <div class="default text">Select Event Type</div>
                        <div class="menu">
                        <c:forEach var="item" items="${eventTypes}">
                            <div class="item" data-value="${item.id}">${item.typeName}</div>
                        </c:forEach>
                        </div>
                    </div>
                </div>
            </c:if>
            <div class="field">
                <input  type="number" name="bib" placeholder="Bib Number" min="1"
                        data-parsley-error-message="Please enter a bib number."
                        data-parsley-required="true"><!--  --></input>
            </div>
            <c:if test='${(!build.rfid)}'>
            <div class="two fields">
                <div class="field">
                    <input  type="text" name="firstname"
                        id="firstname"
                        placeholder="First name"
                        data-parsley-error-message="Please provide a first name."
                        data-parsley-required="true"><!--  --></input>
                </div>
                <div class="field">
                    <input  type="text" name="lastname"
                        id="lastname"
                        placeholder="Last name"
                        data-parsley-error-message="Please provide a last name."
                        data-parsley-required="true"><!--  --></input>
                </div>
            </div>
            </c:if>
            <c:if test='${(build.rfid)}'>
            <div class="two fields">
                <div class="field">
                    <input  type="text" name="firstname"
                        id="firstname"
                        placeholder="First name"><!--  --></input>
                </div>
                <div class="field">
                    <input  type="text" name="lastname"
                        id="lastname"
                        placeholder="Last name"><!--  --></input>
                </div>
            </div>
            </c:if>
            <div class="two fields">
                <div class="field">
                    <select name="gender" id="gender-type" class="ui dropdown"
                            data-parsley-error-message="Please select a gender.">
                        <option selected="selected" disabled="disabled">Gender</option>
                        <option value="M">Male</option>
                        <option value="F">Female</option>
                    </select>
                </div>
                <div class="field">
                    <input  type="number" name="age"
                            placeholder="Age"
                            min="1"
                            max="120"
                            data-parsley-error-message="Invalid age."
                            value=""><!--  --></input>
                </div>
            </div>
            <div class="two fields">
                <div class="field">
                    <input  type="text" name="city"
                            placeholder="City"
                            data-parsley-error-message="Please enter a city."
                            value=""><!--  --></input>
                </div>
                <div class="field">
                    <input  type="text" name="state"
                            placeholder="State"
                            data-parsley-error-message="Please enter a state."
                            value=""><!--  --></input>
                </div>
            </div>
            <div class="field">
                <div class="ui action input">
                    <input  type="text" name="timeStartLocal" id="timedisp"
                            placeholder="Official Time (mm:ss:SS)"
                            data-parsley-error-message="Invalid time format. (hh:mm required)"></input>
                    <div class="ui icon button" id="removetime"><span class="fa fa-close bibs-red"></span></div>
                </div>
            </div>
            <div class="ui error message" id="form-error-messages"><!--  --></div>

            <field:input field="timeofficialdisplay" id="c_com_bibsmobile_model_RaceResult_timeofficialdisplay" render="false" z="user-managed"/>
        </div>
        </form:create>
    </div>
    <form:dependency dependencies="${dependencies}" id="d_com_bibsmobile_model_RaceResult" render="${not empty dependencies}" z="TYwa3h/T7RlbQyVKQ6chbtgOdaw="/>
<script>
    var etype = getUrlParam('type');
    var rules = {
        fields: {
            firstname:   {
                identifier  : 'firstname',
                rules: [{
                    type   : 'empty',
                    prompt : 'Please enter a first name!'
                }]
            },
            lastname:   {
                identifier  : 'lastname',
                rules: [{
                    type   : 'empty',
                    prompt : 'Please enter a last name!'
                }]
            },
            bib:   {
                identifier  : 'bib',
                rules: [{
                    type   : 'empty',
                    prompt : 'Please enter a bib number!'
                },{
                    type   : 'number',
                    prompt : 'Please enter a valid bib number!'
                }]
            },
            gender:   {
                identifier  : 'gender',
                optional    : true,
                rules: [{
                    type   : 'empty',
                    prompt : 'Please select a gender!'
                }]
            },
            timeStartLocal: {
                identifier  : 'timeStartLocal',
                optional    : true,
                rules       : [{
                    type    : 'regExp[/([0-9][0-9]):([0-5][0-9]|60):([0-5][0-9]|60)/]',
                    prompt  : 'Please enter a valid time: mm:ss:ss'
                }]
            }
        }
    };

    window.onload=function(){
        // select event based on param
        parseEventId();
        // focus bib number
        setValidation();
        initDateTimePickers();

        // select first event type
        jQuery('#eventtype-type').dropdown().dropdown('set selected', etype);
        jQuery('#add-athlete-form').form(rules);

        // console.log("${errors}");
        var errors = '${errors}';
        if(errors !== null) {
    		if(errors == "bib.duplicate") {
    			console.log("${raceResult}")
    			var userSelectedEvent = '${selectedEventID}';
    			jQuery('#event-type option[value="'+ userSelectedEvent +'"]').attr("selected", "selected");
                jQuery("#added").show().delay(3000).fadeOut();
                jQuery("#added").css("background-color", "#ff4e50")
                jQuery("#added").html("That bib number already exists, please choose a different one");
    		}
        }
        if(GetURLParameter("added")){
            jQuery("#added").show().delay(3000).fadeOut();
            if(decodeURIComponent(GetURLParameter("added")).indexOf('unlicensed') > -1) {
            	jQuery("#added").css("background-color", "#EC971F");
            }
            jQuery("#added").html("Runner " + decodeURIComponent(GetURLParameter("added")) + " added.");
        }
        
        jQuery('input[name="bib"]').focus();
        jQuery('#proceed').click(function(e){
            var validate = jQuery('#add-athlete-form').form('validate form');
            if(validate){
                jQuery("#add-athlete-form").submit(function() {
                    jQuery('#form-error-messages').hide();
                });
            }else{
                e.preventDefault();
                jQuery('#form-error-messages').show();
                return false;
            }
        });

        // override back button
        jQuery('#back').off().click(function(e){
            e.preventDefault();
            document.location='/bibs-server/raceresults?page=1&amp;size=10&amp;event=${param.event}&amp;type='+etype;
        })
    };

    function getParameterByName(name) {
        name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
        var regex = new RegExp("[\\?&amp;]" + name + "=([^&amp;#]*)"),
            results = regex.exec(location.search);
        return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
    }

    function getUrlParam(sParam){
        return purl().param(sParam);
    }
    
    function parseEventId(){
        var eid = getParameterByName('event');
        console.log(eid);
        if(eid != "") {
            jQuery('#event-type option[value="'+ eid +'"]').attr("selected", "selected");
        }
    }

    function change(field){
   		jQuery("#_"+field+"_id").val(document.getElementById("custom-"+field).value);
    }

    function setValidation(){
        jQuery('#raceResult').parsley({
            errorsWrapper: '<div class="has-error"></div>',
            errorTemplate: '<span></span>'
        });
    }

    function initDateTimePickers(){
        jQuery("#removetime").click(function(){
            jQuery("#timedisp").val("");
        });
    }

    function removeNulls(){
    	jQuery("#_event_id").each(function(index,element){
    		if(element.innerHTML.indexOf(' null null 0')&gt;0)
    			element.innerHTML=element.innerHTML.replace(' null null 0','');
    	});
    }
</script>
</div>
</div>
