<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<div xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:field="urn:jsptagdir:/WEB-INF/tags/form/fields" xmlns:form="urn:jsptagdir:/WEB-INF/tags/form" xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:spring="http://www.springframework.org/tags" version="2.0">
    <jsp:directive.page contentType="text/html;charset=UTF-8"/>
    <jsp:output omit-xml-declaration="yes"/>
    <style>
        body{
            background-image: url('images/auth.jpg');
            background-size: cover; background-repeat: no-repeat;
        }
        .white-overlay{
            display: block;
            background: rgba(255,255,255,.8);
            width: 102%;
            margin-top: -2%;
            margin-left: -1%;
            margin-right: -3%;
            padding-top: 2%;
            padding-bottom: 4%;
        }
        .info-container{
            margin: 0 5%;
            width: auto;
            font-weight: 100;
            line-height: 27px;
            color: #292929;
            text-align: center;
        }
        .ui.form .form-fields{
            margin-bottom: 5px;
        }
        .ui.form .two.fields > .fields, .ui.form .two.fields > .field{
            margin-bottom: 5px;
        }
        .ui.labeled.input {
            display: table;
            margin: 5px auto;
            text-align: left;
            width: 400px;
        }
        .ui.labeled.input > .label {
            width: 32%;
            font-weight: 300;
        }
        .ui.form select{
            padding: 0.42em 1em;
            height: 35px;
        }
        .ui.toggle.checkbox{
            margin-left: 10px;
        }
        i{
            margin-right: 5px;
        }

        /* panel sizes */
        .category-container{
            text-align: right;
        }

        .panel{
            width: 100%;
            margin-top: 2%;
            margin-right: 15%;
        }

        .panel-container{
            width: 94%;
            margin: 0 auto;
        }
        .panel-container-left{
            display: inline-block;
            width: 44%;
            margin-left: 3%;
            vertical-align: top;
        }
        .panel-container-right{
            display: inline-block;
            width: 50%;
        }
        ul{
            margin: 0;
        }
        li{
            list-style-type: none;
            margin-left: 10px;
        }
    </style>
    <div class="white-overlay">
        <div class="ui form info-container">
            <div class="pull-left"><button class="btn btn-default" onclick="onBack()" type="submit">Back</button></div>
            <div class="clearfix"><!--  --></div>
            <h2 class="ui icon header">
                <i class="fa fa-calendar"><!--  --></i>
                <div class="content" style="margin-top:5px">Add Price Changes
                    <div class="sub header"><span id="event-name">${eventitem.name}</span><br/><span class="base-price"> Base price: $</span></div>
                </div>
            </h2>
            <div class="ui accordion" style="width:400px;margin:0 auto;">
                <div class="active title">
                    <div class="ui top inverted primary blue attached header">Add Category Types <i class="fa fa-sort-desc" style="margin-right:0;margin-left:5px"><!--  --></i></div>
                </div>
                <div class="active content">
                    <div class="ui blue attached segment">
                        <div class="ui yellow message">
                            <i class="close fa fa-times"><!--  --></i>
                            <i class="fa fa-question-circle"><!--  --></i>You can add multiple categories!
                        </div>
                    <form id="add-pc-category" data-parsley-validate="data-parsley-validate">
                        <div class="ui labeled input">
                            <div class="ui blue label">Category Name</div>
                            <input  type="text" name="categoryName"
                                    data-for="categoryName"
                                    class="input-form category-field"
                                    placeholder="e.g. Youth Male, Female Teams"
                                    data-parsley-group="category"
                                    data-parsley-required="true"
                                    data-parsley-error-message="Please specify a category name."></input>
                        </div>
                        <div class="ui labeled input">
                            <div class="ui blue label">Min Age</div>
                                <input  type="text" name="lowAgeThreshold"
                                        data-for="lowAgeThreshold" id="lowAge"
                                        class="input-form category-field"
                                        placeholder="Min Age"
                                        value=""
                                        data-parsley-group="category"
                                        data-parsley-required="true"
                                        data-parsley-error-message="Invalid age."></input>
                        </div>
                        <div class="ui labeled input">
                            <div class="ui blue label">Max Age</div>
                                <input  type="text" name="highAgeThreshold"
                                        data-for="highAgeThreshold" id="highAge"
                                        class="input-form category-field"
                                        placeholder="Max Age"
                                        value=""
                                        data-parsley-group="category"
                                        data-parsley-required="true"
                                        data-parsley-error-message="Invalid age."></input>
                        </div>
                        <div class="ui labeled input">
                            <div class="ui blue label">Gender</div>
                                <select data-for="gender" class="category-field" id="gender-type" name="gender"
                                        data-parsley-group="category"
                                        data-parsley-error-message="Please select a gender.">
                                    <option selected="selected" disabled="disabled">Gender</option>
                                    <option value="MALE">Male</option>
                                    <option value="FEMALE">Female</option>
                                    <option value="MALE_AND_FEMALE">Both</option>
                                </select>
                        </div>
                        <div class="ui labeled input">
                            <div class="ui blue label">Teams Only</div>
                                <div class="ui toggle checkbox">
                                    <input type="checkbox" name="team" data-for="team" id="team-check"
                                            class="category-field" autocomplete="off"></input>
                                </div>
                        </div>
                        <div class="pull-right">
                            <button class="ui blue button" type="button" onclick="savePCType()">Add Category</button>
                        </div>
                    </form>
                    </div>
                </div>
            </div>
            
        </div>
        <div class="row panel-container pc-groups"><!--  --></div>
        <div class="row panel-container pc-nav" style="margin: 0 3%; display:none">
            <div class="panel panel-default">
                <div class="panel-heading">Price Change Detail</div>
                <div class="panel-body">
                    <div class="vis-left">
                        <div id="vis-header">
                            <div id="vis-container">
                                <div class="ui yellow message">
                                    <i class="close fa fa-times"><!--  --></i>
                                    <i class="fa fa-question-circle"><!--  --></i>
                                    Scroll to navigate, click to remove, double-click to add or edit.
                                </div>
                                <p class="base-price">Base price: $</p>
                                <div class="slider"><!--  --></div>
                            </div>
                        </div>
                    </div>
                    <div class="vis-right">
                        <div class="row">
                        Start Date: <input  type="text" name="startDate"
                                class="form-control priceStartDate"
                                placeholder="Price start date"
                                data-provide="datepicker"
                                data-date-format="MM/DD/YYYY h:mm:ss a"></input></div>
                        <div class="row">
                        <input  type="text" name="endDate"
                                class="form-control priceEndDate"
                                style="display:none"
                                placeholder="Price end date"
                                data-provide="datepicker"
                                data-date-format="MM/DD/YYYY h:mm:ss a"></input></div>
                        <div class="row">
                            <input  type="text" name="price"
                                    class="input-form"
                                    placeholder="Price"></input>
                        </div>
                        <div class="row">
                            <div style="text-align:right; margin-top: 3%; margin-right:5%">
                                <button type="button" class="btn btn-success" onclick="shiftTimeline(jQuery(this))">Add Price</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <button id="back" type="button" class="btn" onclick="window.history.back();">Cancel</button>
            <button class="btn btn-success" id="proceed" type="submit" onclick="postPriceChanges()">Save</button>
        </div>
    </div>
    
    <script>
        var postObject = {};
        var eciId;
        var eci;
        var eciStart;
        var eciEnd;
        var eciBasePrice;
        var options   = {
            editable: true,
            format: {
                    minorLabels: {
                        millisecond:'SSS',
                        second:     's',
                        minute:     'HH:mm',
                        hour:       'HH:mm',
                        weekday:    'ddd D',
                        day:        'D',
                        month:      'MMM',
                        year:       'YYYY'
                    },
                    majorLabels: {
                        millisecond:'HH:mm:ss',
                        second:     'D MMM HH:mm',
                        minute:     'ddd D MMM',
                        hour:       'ddd D MMM',
                        weekday:    'MMM YYYY',
                        day:        'MMM YYYY',
                        month:      'YYYY',
                        year:       ''
                    }
                },
            onAdd: function (item, callback) {
                item.content = prompt('Price at this date:', item.content);
                if (item.content != null) {
                    callback(item); // send back adjusted new item
                }
                else {
                    callback(null); // cancel item creation
                }
            },
            onMove: function (item, callback) {
                if (confirm('Do you really want to move the item to\n' +
                    'start: ' + item.start + '?')) {
                    callback(item); // send back item as confirmation (can be changed)
                }
                else {
                    callback(null); // cancel editing item
                }
            },
            onUpdate: function (item, callback) {
                item.content = prompt('Edit price:', item.content);
                if (item.content != null) {
                    callback(item); // send back adjusted item
                }
                else {
                    callback(null); // cancel updating the item
                }
            },
            onRemove: function (item, callback) {
                if (confirm('Remove this price change?')) {
                    callback(item); // confirm deletion
                }
                else {
                    callback(null); // cancel deletion
                }
            },
            minHeight: '150px',
            min:    eciStart,
            max:    eciEnd,
            start:  eciStart,
            end:    eciEnd,
            zoomMin: 1000*60*60
        }
        var itemList = [];
        var timelineList = [];
        var pcList = [];

        window.onload = function(){
            eciId = parseEventId();
            getEventData(eciId);
            jQuery('.ui.accordion').accordion();
            jQuery('.ui.checkbox').checkbox();

            jQuery("#lowAge").on('input', function(){
                var low = jQuery("#lowAge").val();
                var high = jQuery("#highAge").val();
                low = parseInt(low);
                high = parseInt(high);

                if( (low == "") || (low == 0) || (isNaN(low)) ){ jQuery("#lowAge").val(""); }
                if( high !== "" ){
                    if( low &gt;= high ){
                        jQuery(this).val(high);
                    }
                    else{
                        jQuery("#highAge").attr("min", jQuery(this).val());
                    }
                }
            });

            jQuery("#highAge").on('change', function(){
                var low = jQuery("#lowAge").val();
                var high = jQuery("#highAge").val();
                low = parseInt(low);
                high = parseInt(high);
                if( (high == "") || (high == 0) || (isNaN(low)) ){ jQuery("#highAge").val("") }
                if( low !== "" ){
                    if( high &lt;= low ){
                        jQuery(this).val(low);
                    }
                    else{
                        jQuery("#lowAge").attr("max", jQuery(this).val());
                    }
                }
            });

            jQuery('.message .close').on('click', function() {
                jQuery(this).closest('.message').fadeOut();
            });
        }

        function savePCType(){
            var pcform = jQuery("#add-pc-category").parsley({
                errorsWrapper: '<div class="has-error"></div>',
                errorTemplate: '<span></span>'
            });
            if(true === jQuery("#add-pc-category").parsley().validate('category')){
                var obj = {};
                jQuery(".category-field").each(function(i){
                    var key = jQuery(this).attr("data-for");
                    var val = jQuery(this).val();
                    if( key == "team" ){
                        if(jQuery("#team-check").prop("checked")){
                            val = true;
                        }else{
                            val = false;
                        }
                    }
                    obj[key] = val;
                });

                postObject = obj;
                postObject['eventCartItem'] = null;

                var index = timelineList.length;
                addGroup(obj, index);
                formInstance.submitEvent.preventDefault();
                return;
            }
            else{
                // error
            }
        }

        function addGroup(obj, index){
            <!-- add panel -->
            var query = jQuery(".pc-nav").children();
            query.clone().appendTo(".pc-groups").attr("id", "group"+index);
            container = document.getElementById("group"+index).getElementsByClassName("slider")[0];
            var items = new vis.DataSet();
            itemList.push(items);
            timeline = new vis.Timeline(container, itemList[index], options);
            timelineList.push(timeline);

            var pc = {};
            pc["obj"] = obj;
            pc["items"] = items;
            pc["timeline"] = timeline;
            pcList.push(pc);

            <!-- change header text -->
            var gender;
            if( obj.gender == "MALE" ){ gender = "M"; }
            if( obj.gender == "FEMALE" ){ gender = "F"; }
            if( obj.gender == "MALE_AND_FEMALE" ){ gender = "any"; }

            var team;
            if( obj.team == true ){ team = "Teams: required" }
            else if( !obj.team ){ team = "Teams: optional" }

            jQuery("#group"+ index).find(".panel-heading")
                .html(obj.categoryName + " (Ages " + obj.lowAgeThreshold + " ~ " + obj.highAgeThreshold + ", Gender: " + gender + ", " + team + ")" )

            initDateTimePickers();

            jQuery('.message .close').on('click', function() {
                jQuery(this).closest('.message').fadeOut();
            });
        }

        function shiftTimeline(caller){
            var timelineIndex = caller.closest(".panel-default").attr("id");
            var index = parseInt(timelineIndex[5]);

            var dateVal = moment(jQuery("#"+timelineIndex).find(".priceStartDate").val()).format('MM/DD/YYYY h:mm:ss a');
            var price   = jQuery("#"+timelineIndex).find('input[name="price"]').val();
            dateVal = moment(dateVal);
            price   = parseInt(price);


            var item = {};
            item["id"] = index + "-" + price;
            item["start"] = dateVal;
            item["content"] = price;

            itemList[index].add(item);
            timelineList[index].fit();
        }

        function parseEventId(){
            var url = window.location.href;
            var urllen = url.length;
            var ind = url.lastIndexOf("=");
            var eid = url.substring(ind+1, urllen);
            return eid;
        }

        function getEventData(id){
            var request = jQuery.ajax({
                url: "/bibs-server/eventitems/" + id,
                type: "GET",
                dataType: "json"
                });
            request.done(function( data ) {
                if( data !== null ){
                    eci = data;
                    console.log(eci);
                    eciStart = moment(data.timeStart).format('MM/DD/YYYY h:mm:ss a');
                    eciEnd = moment(data.timeEnd).format('MM/DD/YYYY h:mm:ss a');
                    eciBasePrice = data.price;
                    jQuery("#event-name").text(eci.name);
                    jQuery(".base-price").each(function(){
                        jQuery(this).text("Base price: $" + eciBasePrice);
                    });
                }else{
                }
            });
            request.fail(function( jqXHR, textStatus ) {
                // error
            });
        }

        function initDateTimePickers(){
            jQuery(".priceStartDate").each(function(){
                jQuery(this).datetimepicker({
                    defaultDate: moment(eciStart),
                    useSeconds: true,
                    sideBySide: true
                });
            });
        }

        function priceChange(price, id, start, end, name, minAge, maxAge, gender, team){
            this.startDate = start;
            this.eventCartItem = id;
            this.endDate = end;
            this.categoryName = name;
            this.lowAgeThreshold = minAge;
            this.highAgeThreshold = maxAge;
            this.gender = gender;
            this.team = team;
            this.price = price;
        }

        function postPriceChanges(){
            // iterate by group
            var postObjList = [];
            for( var i = 0; i &lt; pcList.length; i++ ){
                var groupData = pcList[i].items._data;
                for( var j = 0; j &lt; Object.keys(groupData).length; j++ ){
                    var keys = Object.keys(groupData);
                    var index = keys[j];
                    var objStartDate;
                    var objEndDate;
                    if( j == keys.length-1 ){
                        objStartDate = groupData[index].start;
                        objEndDate = eciEnd;
                    }
                    else{
                        var nextIndex = keys[j+1];
                        objStartDate = groupData[index].start;
                        objEndDate = moment(groupData[nextIndex].start).subtract(1, 'ms');
                    }
                    if( objStartDate !== null ){
                        objStartDate = moment(objStartDate).format("MM/DD/YYYY HH:mm:ss");
                    }
                    if( objEndDate !== null ){
                        objEndDate = moment(objEndDate).format("MM/DD/YYYY HH:mm:ss");
                    }

                    var pc = new Object();
                    pc = jQuery.extend({
                        price: parseInt(groupData[index].content),
                        eventCartItem: {'id':parseInt(eciId)},
                        startDate: objStartDate,
                        endDate: objEndDate
                    }, pcList[i].obj);
                    pc.eventCartItem = {'id':parseInt(eciId)};
                    postObjList.push(pc);
                }
            }

            console.log(postObjList);

            var request = jQuery.ajax({
                url: "/bibs-server/eventitemspricechanges/jsonArray",
                contentType: 'application/json',
                dataType: 'json',
                type: 'POST',
                data: JSON.stringify(postObjList)
            });
            
            request.done(function(data){
                if( data !== null ){
                    console.log("posted")
                    document.location='bibs-server/eventitemspricechanges?eventitem=' + eciId;
                }
                else{
                    // error
                    // alert("There was an error while saving your price changes. Please try again!");
                    document.location='bibs-server/eventitemspricechanges?eventitem=' + eciId;
                }
            });
            request.fail(function( jqXHR, textStatus ) {
                // error
                // alert("There was an error while saving your price changes. Please try again!");
                // document.location='bibs-server/eventitemspricechanges?eventitem=' + eciId;
            });
        }
    </script>
</div>