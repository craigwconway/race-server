<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<div xmlns:field="urn:jsptagdir:/WEB-INF/tags/form/fields" xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:fn="http://java.sun.com/jsp/jstl/functions" xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:page="urn:jsptagdir:/WEB-INF/tags/form" xmlns:sec="http://www.springframework.org/security/tags" xmlns:spring="http://www.springframework.org/tags" version="2.0" xmlns:fmt="http://java.sun.com/jsp/jstl/fmt">
    <jsp:directive.page contentType="text/html;charset=UTF-8"/>
    <jsp:output omit-xml-declaration="yes"/>

    <meta name="viewport" content="width=device-width, initial-scale=1" />
    
    <!-- Custom Fonts -->
    <link href='//fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,300,600,700,800' rel='stylesheet' type='text/css'> </link>
    <link href='//fonts.googleapis.com/css?family=Merriweather:400,300,300italic,400italic,700,700italic,900,900italic' rel='stylesheet' type='text/css'> </link>
    
    <!-- Custom CSS -->
    <link rel="stylesheet" href="/bibs-server/resources/styles/outsiders/creative.css" type="text/css"> </link>
    <link rel="stylesheet" href="/bibs-server/resources/styles/outsiders/event.css" type="text/css"> </link>
    
    <nav id="mainNav" class="navbar navbar-default navbar-fixed-top">
        <div class="container-fluid">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"><!--  --></span>
                    <span class="icon-bar"><!--  --></span>
                    <span class="icon-bar"><!--  --></span>
                </button>
                <div id="back-btn" onclick="goBack()"><i class="fa fa-arrow-left"><!--  --></i></div>
            </div>

            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav navbar-right">
                    <li>
                        <a class="page-scroll" href="/bibs-server/r">Home</a>
                    </li>
                    <c:if test="${event.organizer != null }">
                     <li>
                        <a class="page-scroll" href="/bibs-server/r/o/${event.organizer.id}">Organizer</a>
                    </li>                   
                    </c:if>

                </ul>
            </div>
        </div>
    </nav>

    <section class="region-1-dark-bg" id="banner">
        <div class="header-content">
            <div class="header-content-inner">
                <div id="region-header">
                    <div><img id="region-logo" src="/bibs-server/images/whitelogo.png"/></div>
                	<div id="region-title">${event.name }</div>
                	<div id="courses-labels">
                	<c:forEach var="item" items="${event.eventTypes }">
                	<c:if test="${item.distance == '5k' }"><div class="ui zappos green label" id="label-template">5k</div></c:if>
                	<c:if test="${item.distance == '10k' }"><div class="ui zappos yellow label" id="label-template">10k</div></c:if>
                	<c:if test="${item.distance == 'Marathon' }"><div class="ui zappos yellow label" id="label-template">Marathon</div></c:if>
                	<c:if test="${item.distance == 'Half Marathon' }"><div class="ui zappos yellow label" id="label-template">Half</div></c:if>
                	<c:if test="${item.distance != '5k' &amp;&amp; item.distance != '10k' &amp;&amp; item.distance != 'Half Marathon' &amp;&amp; item.distance != 'Marathon'}"><div class="ui zappos yellow label" id="label-template">Other</div></c:if>
                	</c:forEach>
                	</div>
                </div>
            </div>
        </div>
    </section>
    <div style="clear:both;"><!-- --></div>
    <section class="no-padding" id="events">
        <div class="ui center aligned basic segment">
            <div id="event">
                <div class="event-date"><!--  --></div>
                <div class="event-time"><!--  --></div>
                <h4 class="ui header"><div class="sub header date-elev"><!--   --></div></h4>
                <div class="ui search" id="search-user">
                    <div class="ui icon input">
                        <input type="text" name="bibsearch" placeholder="Search bib #, name..." />
                        <button class="circular ui tiny icon button" id="search-single-button"><i class="inverted circular icon fa fa-search"
                           style="font-family:'FontAwesome';top:5px;right:5px"><!--   --></i></button>
                    </div>
                    <div class="results" style="height: 175px; overflow-y: auto"><!--   --></div>
                    <a class="result" id="query-item-template" style="display:none">
                        <div class="content query-content">
                            <div class="title query-title"><!--   --></div>
                            <div class="description query-description"><!--   --></div>
                        </div>
                    </a>
                </div>
                <div id="results">
                    <div id="category-result-container">
                        <h2 class="ui center aligned header result-header">Overall Results</h2>
                        <div class="ui four column centered doubling stackable grid container">
                            <div class="eight wide column">
                                <div id="result-filter-buttons" class="ui four large buttons">
                                    <button class="ui teal button">Overall</button>
                                    <button class="ui teal button">Team</button>
                                    <button class="ui teal button">Gender + Age</button>
                                    <button class="ui yellow button">Medals</button>
                                </div>
                            </div>
                            <div class="centered row">
                                <div id="filter-team-container" class="center aligned column filter-container">
                                    <div class="ui dropdown" id="result-filter-team" style="margin:auto 10px;font-size:1.2em;">
                                        <input type="hidden" name="team" />
                                        <div class="default text">Team Standings</div>
                                        <i class="dropdown icon"><!--  --></i>
                                        <div class="menu">
                                            <div class="item" data-value="0">Overall Team Standings</div>
                                            <div class="item" data-value="M">Teams (M)</div>
                                            <div class="item" data-value="F">Teams (F)</div>
                                        </div>
                                    </div>
                                </div>
                                <div id="filter-gender-container" class="center aligned column filter-container">
                                    <div class="ui dropdown" id="result-filter-gender" style="margin:auto 10px;font-size:1.2em;">
                                        <input type="hidden" name="type" />
                                        <div class="default text">Filter by Gender</div>
                                        <i class="dropdown icon"><!--  --></i>
                                        <div class="menu">
                                            <div class="item" data-value="0">Overall Gender</div>
                                            <div class="item" data-value="M">Top Male</div>
                                            <div class="item" data-value="F">Top Female</div>
                                        </div>
                                    </div>
                                </div>
                                <div id="filter-age-container" class="center aligned column filter-container">
                                    <div class="ui dropdown" id="result-filter-age" style="margin:auto 10px;font-size:1.2em;">
                                        <input type="hidden" name="age" />
                                        <div class="default text">Filter by Age Group</div>
                                        <i class="dropdown icon"><!--  --></i>
                                        <div class="menu">
                                            <div class="item" data-value="0">Overall Age Group</div>
                                            <div class="item" data-value="1">10-19</div>
                                            <div class="item" data-value="2">20-29</div>
                                            <div class="item" data-value="3">30-39</div>
                                            <div class="item" data-value="4">40-49</div>
                                            <div class="item" data-value="5">50-59</div>
                                            <div class="item" data-value="6">60-69</div>
                                            <div class="item" data-value="7">70-79</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="center aligned column">
                                    <div class="ui dropdown" id="result-filter-etype" style="margin:auto 10px;font-size:1.2em;">
                                        <input type="hidden" name="etype" />
                                        <div class="default text">Event Type</div>
                                        <i class="dropdown icon"><!--  --></i>
                                        <div class="menu"><!--  --></div>
                                    </div>
                                    <div class="item" id="filter-etype-template" data-value="0" style="display:none"><!--  --></div>
                                </div>
                            </div>
                        </div>
                        <div class="ui divider" style="visibility:hidden;"><!--   --></div>
                        <div class="ui divided relaxed large list result-list"><!--   --></div>
                        <div class="item" id="result-list-item-header" style="display:none">
                            <div class="right floated content">
                                <div class="ui label">Finish Time</div>
                            </div>
                            <div class="content">
                                <div class="header">Top 10 <span class="result-list-category-title">Overall</span></div>
                                <div class="description"><!--   --></div>
                            </div>
                        </div>
                        <div class="item" id="result-list-item-template" style="display:none">
                            <div class="left floated middle aligned content">
                                <div class="ui circular large black label"><span class="result-list-item-place"><!--   --></span></div>
                            </div>
                            <div class="right floated content">
                                <div class="ui left pointing blue label"><span class="result-list-item-time">00:42:42</span></div>
                            </div>
                            <div class="content">
                                <a class="header"><span class="result-list-item-name"><!--   --></span>, <span class="result-list-item-age"><!--   --></span> <span class="result-list-item-gender"><!--   --></span></a>
                                <div class="description"><span class="result-list-bib">Bib #<span class="result-list-item-bib"><!--  --></span></span> <span class="result-list-team">, Team <span class="result-list-item-team"><!--  --></span></span></div>
                            </div>
                        </div>
                    </div>
                    <div class="ui divided relaxed large list team-result-list" id="result-list-team-template" style="display:none">
                        <div class="item team-header">
                            <div class="content"></div>
                        </div>
                    </div>
                    <div class="ui divided relaxed large list medal-result-list" id="result-list-medal-template" style="display:none">
                        <div class="item medal-header">
                            <div class="content"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="social">
                <div class="social-header">Share with friends</div>
                <a><i class="fa fa-facebook link icon" id="facebook-share-button"><!--   --></i></a>
                <a href="//twitter.com/share"><i class="fa fa-twitter link icon" id="twitter-share-button"><!--   --></i></a>
                <a href="javascript:void((function()%7Bvar%20e=document.createElement(&apos;script&apos;);e.setAttribute(&apos;type&apos;,&apos;text/javascript&apos;);e.setAttribute(&apos;charset&apos;,&apos;UTF-8&apos;);e.setAttribute(&apos;src&apos;,&apos;http://assets.pinterest.com/js/pinmarklet.js?r=&apos;+Math.random()*99999999);document.body.appendChild(e)%7D)());"><i class="fa fa-pinterest-p link icon" id="pinterest-share-button"><!--   --></i></a>
            </div>
        </div>
    </section>
    <script>
        jQuery('.ui.accordion').accordion();
        jQuery('.ui.checkbox').checkbox();

        jQuery.ajax({
            context: this,
            url: '/bibs-server/events/details/${event.id}',
            error: function() {
                console.log('error in retrieving events')
            },
            success: function(data) {
                this.currentEvent = data;
                console.log(data);
            },
            type: 'GET'
        }).then(function(eventInfo){
            var currentEventTypeID = null;
            var currentTeamFilter = null;
            var currentGenderFilter = null;
            var currentAgeFilter = null;
            
            jQuery('#region-title').text(eventInfo.name);
            jQuery('#single-result-container').hide();
            jQuery(".filter-container").hide();
            jQuery("#result-filter-buttons > .button:first-child").addClass("active");
            jQuery("#result-filter-buttons > .button").each(function(i,o){
                if(i === 0){ // overall
                    jQuery(o).off().on("click", function(e){
                        jQuery(".filter-container").hide();
                        toggleActiveButton(i);
                    });
                }
                if(i === 1){ // team
                    jQuery(o).off().on("click", function(e){
                        jQuery(".filter-container").hide();
                        jQuery("#filter-team-container").show();
                        toggleActiveButton(i);
                    });
                }
                if(i === 2){ // gender + age
                    jQuery(o).off().on("click", function(e){
                        jQuery(".filter-container").hide();
                        jQuery("#filter-gender-container, #filter-age-container").show();
                        toggleActiveButton(i);
                    });
                }
                if(i === 3){ // medal
                    jQuery(o).off().on("click", function(e){
                        jQuery(".filter-container").hide();
                        toggleActiveButton(i);
                        renderMedalResults();
                    });
                }
            });

            function toggleActiveButton(i){
                var n = i + 1;
                jQuery("#result-filter-buttons > .button").not("#result-filter-buttons > .button:nth-child(" + n + ")").removeClass("active");
                jQuery("#result-filter-buttons > .button:nth-child(" + n + ")").addClass("active");
            }

            reformatEventDate();
            initEventType();

            initAgeFilter();
            initTeamFilter();
            initGenderFilter();

            jQuery('#search-single-button').bind('click', function(){
                var query = jQuery('input[name="bibsearch"]').val();
                if(query.length > 0){
                    renderSearchResults(query);
                }
            });

            renderCategoryResults(null);

            function reformatEventDate(){
                var momentTimeStart = null;
                var dayOfWeek = null;
                var date = null;
                var time = null;
                if(eventInfo.timeStartLocal !== null){
                    momentTimeStart = moment(eventInfo.timeStartLocal, 'MM/DD/YYYY hh:mm:ss a');
                    dayOfWeek = momentTimeStart.format('dddd');
                    date = momentTimeStart.format('MMMM D, YYYY');
                    time = momentTimeStart.format('h:mm a');
                    jQuery('#event').find('.event-date').text(date);
                    jQuery('#event').find('.event-time').text(time);
                }
            }

            function initEventType(){
                var firstEtype = null;
                for(var el in eventInfo.eventTypes){
                    var etype = eventInfo.eventTypes[el];
                    if(el == 0){ firstEtype = etype.id; }
                    var etypeItem = jQuery('#filter-etype-template').clone().appendTo('#result-filter-etype > .menu');
                        etypeItem.text(etype.distance);
                        etypeItem.attr('data-value', etype.id);
                        etypeItem.removeAttr('id').show();
                }

                if( eventInfo.hasOwnProperty('eventTypes') &amp;&amp; eventInfo.eventTypes.length > 1 ){
                    currentEventTypeID = eventInfo.eventTypes[0].id;
                }else{
                    jQuery('#search-type').find('.item:first-child').hide();
                }

                jQuery('#result-filter-etype').dropdown('set selected', firstEtype);
                jQuery('#result-filter-etype').dropdown({
                    onChange: function(value, text, $selectedDOM){
                        currentEventTypeID = value;
                        renderCategoryResults(null);
                        renderQueryDescription();
                    }
                });
            }

            function initAgeFilter(){
                jQuery('#result-filter-age').dropdown({
                    onChange: function(value, text, $selectedDOM){
                        if(value == 0){
                            currentAgeFilter = null;
                        }else{
                            currentAgeFilter = text;
                        }
                        renderCategoryResults(value);
                        renderQueryDescription();
                    }
                });
                jQuery('#result-filter-age').dropdown('set selected', '0');
            }

            function initTeamFilter(){
                jQuery("#result-filter-team").dropdown({
                    onChange: function(value, text, $selectedDOM){
                        // renderCategoryResults(value);
                        var genderValue = jQuery('#result-filter-gender').dropdown('get value');
                        if(value == 0){
                            currentTeamFilter = null;
                            if(genderValue == 'M'){
                                currentGenderFilter = 'Male';
                            }
                            if(genderValue == 'F'){
                                currentGenderFilter = 'Female';
                            }
                        }else if(value == 'M'){
                            currentTeamFilter = 'Team (M)';
                            if(genderValue == 'F'){
                                jQuery('#result-filter-gender').dropdown('set selected', 'M');
                            }
                            renderTeamResults(value);
                        }else if(value == 'F'){
                            currentTeamFilter = 'Team (F)';
                            if(genderValue == 'M'){
                                jQuery('#result-filter-gender').dropdown('set selected', 'F');
                            }
                            renderTeamResults(value);
                        }
                        renderQueryDescription();
                    }
                });
                jQuery("#result-filter-team").dropdown('set selected', '0');
            }

            function initGenderFilter(){
                jQuery('#result-filter-gender').dropdown({
                    onChange: function(value, text, $selectedDOM){
                        renderCategoryResults(value);
                        var teamValue = jQuery('#result-filter-team').dropdown('get value');
                        if(value == 0){
                            currentGenderFilter = null;
                        }else if(value == 'M'){
                            currentGenderFilter = 'Male';
                            if(teamValue == 'F'){
                                jQuery('#result-filter-team').dropdown('set selected', 'M');
                                currentGenderFilter = null;
                            }
                        }else if(value == 'F'){
                            currentGenderFilter = 'Female';
                            if(teamValue == 'M'){
                                jQuery('#result-filter-team').dropdown('set selected', 'F');
                                currentGenderFilter = null;
                            }
                        }
                        renderQueryDescription();
                    }
                });
                jQuery('#result-filter-gender').dropdown('set selected', '0');
            }

            function renderQueryDescription(){
                var text = "";
                if(currentTeamFilter){
                    text += currentTeamFilter + " ";
                }
                if(currentGenderFilter){
                    text += currentGenderFilter + " ";
                }
                if(currentAgeFilter){
                    text += currentAgeFilter + " ";
                }
                if(text.length == 0){
                    text = "Overall ";
                }
                jQuery('.result-header').text(text + "Results");
            }

            function renderMedalResults(){
                jQuery('.result-cards').hide();

                // jQuery.ajax({
                //     context: this,
                //     url: '/bibs-server/raceresults/search?eventId=${event.id}&amp;type=' + currentEventTypeID + '&amp;gender=' + typeId,
                //     error: function() {
                //         console.log('error in retrieving events')
                //     },
                //     success: function(data) {
                        var overallM = [
                            {"id":216,"bib":216,"firstname":"Sazu","lastname":"Focahew","age":19,"gender":"M","city":"San Francisco","timeofficialdisplay":"00:15:17","team":null},
                            {"id":126,"bib":126,"firstname":"Kutavoxu","lastname":"Vexagulu","age":16,"gender":"M","city":"San Francisco","timeofficialdisplay":"00:15:44","team":null},
                            {"id":162,"bib":162,"firstname":"Kogo","lastname":"Zixele","age":38,"gender":"M","city":"San Francisco","timeofficialdisplay":"00:16:14","team":null}
                        ];
                        var mastersM = [
                            {"id":204,"bib":204,"firstname":"Beqote","lastname":"Popoco","age":26,"gender":"M","city":"San Francisco","timeofficialdisplay":"00:16:16","team":null},
                            {"id":24,"bib":24,"firstname":"Betibo","lastname":"Heju","age":28,"gender":"M","city":"San Francisco","timeofficialdisplay":"00:17:38","team":null},
                            {"id":18,"bib":18,"firstname":"Fofoh","lastname":"Xafo","age":62,"gender":"M","city":"San Francisco","timeofficialdisplay":"00:17:42","team":null}
                        ];
                        var grandM = [
                            {"id":264,"bib":264,"firstname":"Loci","lastname":"Nicohibu","age":19,"gender":"M","city":"San Francisco","timeofficialdisplay":"00:18:52","team":null},
                            {"id":144,"bib":144,"firstname":"Jogu","lastname":"Filu","age":14,"gender":"M","city":"San Francisco","timeofficialdisplay":"00:20:28","team":null},
                            {"id":90,"bib":90,"firstname":"Gasof","lastname":"Nacem","age":60,"gender":"M","city":"San Francisco","timeofficialdisplay":"00:22:33","team":null}
                        ];
                        var overallF = [
                            {"id":63,"bib":63,"firstname":"Labanek","lastname":"Wazema","age":73,"gender":"F","city":"San Francisco","timeofficialdisplay":"00:16:13","team":null},
                            {"id":51,"bib":51,"firstname":"Mohom","lastname":"Zuzi","age":14,"gender":"F","city":"San Francisco","timeofficialdisplay":"00:16:37","team":null},
                            {"id":153,"bib":153,"firstname":"Nipop","lastname":"Hidoq","age":14,"gender":"F","city":"San Francisco","timeofficialdisplay":"00:16:51","team":null}
                        ];
                        var mastersF = [
                            {"id":261,"bib":261,"firstname":"Zoze","lastname":"Pegosa","age":56,"gender":"F","city":"San Francisco","timeofficialdisplay":"00:19:40","team":null},
                            {"id":177,"bib":177,"firstname":"Zigi","lastname":"Tusa","age":48,"gender":"F","city":"San Francisco","timeofficialdisplay":"00:20:45","team":null},
                            {"id":291,"bib":291,"firstname":"Gicec","lastname":"Dapi","age":22,"gender":"F","city":"San Francisco","timeofficialdisplay":"00:21:49","team":null}
                        ];
                        var grandF = [
                            {"id":141,"bib":141,"firstname":"Zucal","lastname":"Lazo","age":79,"gender":"F","city":"San Francisco","timeofficialdisplay":"00:24:44","team":null},
                            {"id":267,"bib":267,"firstname":"Zocurego","lastname":"Hawu","age":28,"gender":"F","city":"San Francisco","timeofficialdisplay":"00:30:17","team":null},
                            {"id":111,"bib":111,"firstname":"Biharul","lastname":"Jude","age":74,"gender":"F","city":"San Francisco","timeofficialdisplay":"00:30:26","team":null}
                        ];
                        var results = [
                            {
                                name: "Top Males Overall",
                                data: overallM
                            }, {
                                name: "Top Male Masters",
                                data: mastersM
                            }, {
                                name: "Top Male Grandmasters",
                                data: grandM
                            }, {
                                name: "Top Females Overall",
                                data: overallF
                            }, {
                                name: "Top Female Masters",
                                data: mastersF
                            }, {
                                name: "Top Female Grandmasters",
                                data: grandF
                            }];
                        jQuery(".result-list").html(" ");
                        jQuery('.result-list-item-header').clone().removeAttr('id').appendTo('.result-list').show();

                        var medals = [];

                        jQuery('#category-result-container > .team-result-list').remove();
                        for(var i in results){
                            var category = results[i];
                            if(medals.indexOf(category.name)){
                                medals.push(category.name);
                                var medalHeaderDOM = jQuery('#result-list-medal-template').clone().appendTo('#category-result-container');
                                jQuery(medalHeaderDOM).find('.medal-header > .content').text(category.name);
                                jQuery(medalHeaderDOM).attr('id', 'medal-' + medals.length).show();
                                resultDOM = jQuery('#result-list-item-template').clone().appendTo('#medal-' + medals.length);
                            }
                            var data = category.data;
                            var index = medals.indexOf(category.name)+1;
                            for(var j in data){
                                var elem = data[j];
                                var resultDOM = null;
                                resultDOM = jQuery('#result-list-item-template').clone().appendTo('#medal-' + index);
                                if(resultDOM !== null){
                                    var place = +i+1;
                                        jQuery(resultDOM).find('.result-list-item-time').text(elem.timeofficialdisplay);
                                        jQuery(resultDOM).find('.result-list-item-name').text(elem.firstname + " " + elem.lastname);
                                        jQuery(resultDOM).find('.result-list-item-age').text(elem.age + ", " || "");
                                        jQuery(resultDOM).find('.result-list-item-gender').text(elem.gender || "");
                                        jQuery(resultDOM).find('.result-list-item-bib').text(elem.bib);
                                        jQuery(resultDOM).find('.result-list-item-place').text(place);
                                        jQuery(resultDOM).find('.result-list-item-team').text(elem.team || "N/A");
                                        (function(index, elem){
                                            jQuery(resultDOM).find('a').bind('click', function(){
                                                window.location.href = '/bibs-server/r/r/'+elem.id;
                                            })
                                        })(i, elem)
                                        jQuery(resultDOM).removeAttr('id').show();
                                }
                            }
                        }
                //     },
                //     type: 'GET'
                // });
            }

            function renderTeamResults(typeId){
                jQuery('.result-cards').hide();
                // Events.getResultsByGender(id)
                if(typeId == null || typeId == 0){
                    typeId = 'M&amp;gender=F';
                }

                // jQuery.ajax({
                //     context: this,
                //     url: '/bibs-server/raceresults/search?eventId=${event.id}&amp;type=' + currentEventTypeID + '&amp;gender=' + typeId,
                //     error: function() {
                //         console.log('error in retrieving events')
                //     },
                //     success: function(data) {
                        var results = [{"id":44,"bib":44,"firstname":"Togi","lastname":"Dixi","age":83,"gender":"M","city":"San Francisco","timeofficialdisplay":"00:15:12","team":"Rocket"},{"id":190,"bib":190,"firstname":"Qari","lastname":"Rimir","age":83,"gender":"M","city":"San Francisco","timeofficialdisplay":"00:15:37","team":"Magma"},{"id":125,"bib":125,"firstname":"Bejavu","lastname":"Muse","age":53,"gender":"F","city":"San Francisco","timeofficialdisplay":"00:15:49","team":"Rocket"},{"id":73,"bib":73,"firstname":"Rodo","lastname":"Bopi","age":18,"gender":"F","city":"San Francisco","timeofficialdisplay":"00:15:49","team":"Rocket"},{"id":38,"bib":38,"firstname":"Bubimun","lastname":"Baviwir","age":38,"gender":"M","city":"San Francisco","timeofficialdisplay":"00:16:28","team":"Magma"},{"id":157,"bib":157,"firstname":"Qebi","lastname":"Kujeqa","age":46,"gender":"F","city":"San Francisco","timeofficialdisplay":"00:16:38","team":"Rocket"},{"id":178,"bib":178,"firstname":"Janu","lastname":"Humi","age":16,"gender":"M","city":"San Francisco","timeofficialdisplay":"00:16:46","team":"Magma"},{"id":172,"bib":172,"firstname":"Gamiw","lastname":"Kizuzav","age":43,"gender":"M","city":"San Francisco","timeofficialdisplay":"00:16:49","team":"Magma"},{"id":194,"bib":194,"firstname":"Sona","lastname":"Qowe","age":21,"gender":"M","city":"San Francisco","timeofficialdisplay":"00:17:17","team":"Aqua"},{"id":220,"bib":220,"firstname":"Fuvo","lastname":"Ramula","age":18,"gender":"M","city":"San Francisco","timeofficialdisplay":"00:17:26","team":"Aqua"}];
                        jQuery(".result-list").html(" ");
                        jQuery('.result-list-item-header').clone().removeAttr('id').appendTo('.result-list').show();

                        var teams = [];

                        jQuery('#category-result-container > .medal-result-list').remove();
                        for(var i in results){
                            var elem = results[i];
                            var resultDOM = null;
                            if(teams.indexOf(elem.team) == -1){
                                teams.push(elem.team);
                                var teamHeaderDOM = jQuery('#result-list-team-template').clone().appendTo('#category-result-container');
                                jQuery(teamHeaderDOM).find('.team-header > .content').text("Team " + elem.team || "N/A");
                                jQuery(teamHeaderDOM).attr('id', 'team-' + teams.length).show();
                                resultDOM = jQuery('#result-list-item-template').clone().appendTo('#team-' + teams.length);
                            }else{
                                var index = teams.indexOf(elem.team)+1;
                                console.log("found team", elem.team, index, teams[index])
                                resultDOM = jQuery('#result-list-item-template').clone().appendTo('#team-' + index);
                            }

                            if(resultDOM !== null){
                                var place = +i+1;
                                    jQuery(resultDOM).find('.result-list-item-time').text(elem.timeofficialdisplay);
                                    jQuery(resultDOM).find('.result-list-item-name').text(elem.firstname + " " + elem.lastname);
                                    jQuery(resultDOM).find('.result-list-item-age').text(elem.age + ", " || "");
                                    jQuery(resultDOM).find('.result-list-item-gender').text(elem.gender || "");
                                    jQuery(resultDOM).find('.result-list-item-bib').text(elem.bib);
                                    jQuery(resultDOM).find('.result-list-item-place').text(place);
                                    jQuery(resultDOM).find('.result-list-item-team').text(elem.team || "N/A");
                                    (function(index, elem){
                                        jQuery(resultDOM).find('a').bind('click', function(){
                                            window.location.href = '/bibs-server/r/r/'+elem.id;
                                        })
                                    })(i, elem)
                                    jQuery(resultDOM).removeAttr('id').show();
                            }
                        }
                //     },
                //     type: 'GET'
                // });
            }

            function renderCategoryResults(typeId){
                // Events.getResultsByGender(id)
                if(typeId == null || typeId == 0){
                    typeId = 'M&amp;gender=F';
                }

                jQuery.ajax({
                    context: this,
                    url: '/bibs-server/raceresults/search?eventId=${event.id}&amp;type=' + currentEventTypeID + '&amp;gender=' + typeId,
                    error: function() {
                        console.log('error in retrieving events')
                    },
                    success: function(data) {
                        var results = JSON.parse(data);
                        // console.log(results)

                        jQuery('.result-list').html('');
                        jQuery('#category-result-container > .team-result-list').remove();
                        jQuery('#category-result-container > .medal-result-list').remove();
                        jQuery('.result-list-item-header').clone().removeAttr('id').appendTo('.result-list').show();

                        for(var i in results){
                            var elem = results[i];

                            // if( i &lt; 3 ){
                            //     var topThreeClassName = '';
                            //     if(i == 0){
                            //         topThreeClassName = '.result-cards-first';
                            //     }else if(i == 1){
                            //         topThreeClassName = '.result-cards-second';
                            //     }else if(i == 2){
                            //         topThreeClassName = '.result-cards-third';
                            //     }
                            //     jQuery(topThreeClassName).find('.award-content').find('.header').text(elem.firstname + ' ' + elem.lastname);
                            //     jQuery(topThreeClassName).find('.award-content').find('.description').text(elem.age + ', ' + elem.gender);
                            //     jQuery(topThreeClassName).find('.stat-finish').find('.value').text(elem.timeofficialdisplay);
                            // }

                            var place = +i+1;
                            var resultDOM = jQuery('#result-list-item-template').clone().appendTo('.result-list');
                                jQuery(resultDOM).find('.result-list-item-time').text(elem.timeofficialdisplay);
                                jQuery(resultDOM).find('.result-list-item-name').text(elem.firstname + ' ' + elem.lastname);
                                jQuery(resultDOM).find('.result-list-item-age').text(elem.age + ", " || "");
                                jQuery(resultDOM).find('.result-list-item-gender').text(elem.gender);
                                jQuery(resultDOM).find('.result-list-item-bib').text(elem.bib);
                                jQuery(resultDOM).find('.result-list-item-place').text(place);
                                jQuery(resultDOM).find('.result-list-item-team').text(elem.team || "N/A");
                                (function(index, elem){
                                    jQuery(resultDOM).find('a').bind('click', function(){
                                        window.location.href = '/bibs-server/r/r/'+elem.id;
                                    })
                                })(i, elem)
                                jQuery(resultDOM).removeAttr('id').show();
                        }
                        // jQuery('.result-cards').show();
                        jQuery('#result-filter-ttype > .field:first-child').find('input').prop('checked', 'checked');
                    },
                    type: 'GET'
                });
            }

            function renderSearchResults(query){
                var resultPromise = null;
                if(isNaN(query)){
                    // resultPromise = Events.getResultsByName(query);
                    resultPromise = jQuery.ajax({
                                        context: this,
                                        url: '/bibs-server/raceresults/search?event=${event.id}&amp;name=' + query,
                                        error: function() {
                                            console.log('error in retrieving events')
                                        },
                                        success: function(data) {
                                            this.currentResult = data;
                                        },
                                        type: 'GET'
                                    });
                }else{
                    // resultPromise = Events.getResultsByBib(query);
                    resultPromise = jQuery.ajax({
                                        context: this,
                                        url: '/bibs-server/raceresults/search?event=${event.id}&amp;bib=' + query,
                                        error: function() {
                                            console.log('error in retrieving events')
                                        },
                                        success: function(data) {
                                            this.currentResult = data;
                                        },
                                        type: 'GET'
                                    });
                }

                resultPromise.then(function(data){
                    var results = JSON.parse(data);

                    if(results !== null &amp;&amp; results !== undefined){
                        // renderSingleResult(result);
                        if(results.length == 1){
                            window.location.href = '/bibs-server/r/r/' + results[0].id;
                        }else if(results.length > 1){
                            jQuery('.results').html('');
                            for(var i in results){
                                console.log(results[i]);
                                var queryDOM = jQuery('#query-item-template').clone().appendTo('.results');
                                    jQuery(queryDOM).find('.query-title').text(results[i].firstname + ' ' + results[i].lastname);
                                    jQuery(queryDOM).find('.query-description').text('Bib #' + results[i].bib);
                                    jQuery(queryDOM).removeAttr('id').show();
                                    (function(index){
                                        jQuery(queryDOM).attr('href', '/bibs-server/r/r/' + results[index].id);
                                    })(i);
                            }
                            jQuery('.results').addClass('transition visible');
                            setTimeout(function(){
                                jQuery('.results').removeClass('visible').addClass('hidden');
                            }, 7000);
                        }else if(results.length == 0){
                            jQuery('#single-result-container').hide();
                            alert("We couldn't find someone with that query. Please double-check the bib number or name!");
                        }
                    }else{
                        jQuery('#single-result-container').hide();
                        alert("We couldn't find someone with that query. Please double-check the bib number or name!");
                    }
                })
            }
        });

        function goBack(){
            window.location = "/bibs-server/r/e/${event.id}";
        }
        function goInfo(){
        	window.location = "/bibs-server/r/e/${event.id}/info";
        }
        function goResults(){
        	window.location = "/bibs-server/r/e/${event.id}/results";
        }        
    </script>
    <script type="text/javascript" src="/bibs-server/resources/scripts/outsiders/moment.min.js"><!-- --></script>
</div>

