<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<div xmlns:field="urn:jsptagdir:/WEB-INF/tags/form/fields" xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:form="urn:jsptagdir:/WEB-INF/tags/form" xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:sec="http://www.springframework.org/security/tags" version="2.0" xmlns:fmt="http://java.sun.com/jsp/jstl/fmt" xmlns:fn="http://java.sun.com/jsp/jstl/functions">
<jsp:directive.page contentType="text/html;charset=UTF-8"/>
<jsp:output omit-xml-declaration="yes"/>
<style>
    .info-container{
        margin: 0 auto;
        font-size: 1.2em;
        font-weight: 400;
        line-height: 27px;
        color: #292929;
    }
    #eventForm{
        width:400px;
        margin:3% auto;
    }
    textarea{
        width: 400px;
    }
    label{
        width: 100%;
        text-align:left;
    }
    .submit{
        margin: 0 auto;
        width: 400px;
        text-align: right;
        margin-top: 2%;
    }
    @media only screen and (min-device-width : 320px) and (max-device-width : 568px) {
        #eventForm, textarea{
            width: 95%;
        }
        .bootstrap-datetimepicker-widget.timepicker-sbs{
            width: 300px;
        }
        .bootstrap-datetimepicker-widget.timepicker-sbs > .row > .col-sm-6.timepicker{
            padding-left: 0px;
            padding-right: 0px;
        }
        .bootstrap-datetimepicker-widget button[data-action]{
            margin-left: -0.3em;
        }
        .submit{
            width: 95%;
        }
    }
</style>
<div class="bibs-page bibs-bg-gray-1" style="padding-top:2%;">
    <form:update id="fu_com_bibsmobile_model_Event" modelAttribute="event" path="/events" versionField="Version" z="HRUEbbTPOtP6NCVvkP7sA85e324=">
    <div class="info-container">
        <h2 class="ui icon center aligned header">
            <i class="fa fa-cog"><!--  --></i>
            <div class="content">Edit Event
                <div class="sub header">Edit the details for ${event.name}.</div>
            </div>
        </h2>
        <!-- chrome autocomplete hack -->
        <div style="display: none;">
            <input type="text" id="PreventChromeAutocomplete" name="PreventChromeAutocomplete" autocomplete="address-level4" />
        </div>
        <div class="ui small form" id="eventForm">
            <div class="required field">
                <label>Event Name</label>
                <input  type="text" name="name"
                        autocomplete="off"
                        placeholder="Event name"
                        value="${event.name}"
                        data-parsley-error-message="Please enter an event name."
                        data-parsley-required="required"></input>
            </div>
            <div class="field">
                <label>Description</label>
                <textarea   name="description" rows="2"
                            placeholder="Event description"
                            value="${fn:escapeXml(event.description)}"><!-- --></textarea>
            </div>
            <div class="required field">
                <label>Event Date</label>
                <input  type="text" name="timeStartLocal"
                        autocomplete="off"
                        id="eventDatepicker"
                        value="${event.timeStartLocal}"
                        placeholder="Event date"
                        data-provide="datepicker"
                        data-date-format="MM/DD/YYYY h:mm:ss a"
                        data-parsley-error-message="Please enter a date for this event."
                        data-parsley-required="true"></input>
            </div>
            <c:if test='${(!build.rfid)}'>
                <div class="required field">
                    <label>Website</label>
                        <input  type="url" name="website"
                            autocomplete="off"
                            id="mask-website"
                            placeholder="Website"
                            value="${event.website}"
                            data-parsley-type="url"
                            data-parsley-error-message="Please enter a valid website starting with http:// or https://"
                            data-parsley-required="required"></input>
                </div>
                <div class="required field">
                    <label>Phone Number</label>
                        <input  type="text" name="phone"
                            autocomplete="off"
                            id="mask-phone"
                            placeholder="Phone Number"
                            value="${event.phone}"
                            data-parsley-length="[10,18]"
                            data-parsley-error-message="Please enter a valid phone number."
                            data-parsley-required="required"></input>
                    </div>
            </c:if>
            <c:if test='${(build.rfid)}'>
                <div class="required field">
                    <label>Website</label>
                    <input  type="url" name="website"
                        autocomplete="off"
                        id="mask-website"
                        placeholder="Website"
                        value="${event.website}"
                        data-parsley-type="url"
                        data-parsley-error-message="Please enter a valid website starting with http:// or https://"></input>
                </div>
                <div class="required field">
                    <label>Phone Number</label>
                    <input  type="text" name="phone"
                        autocomplete="off"
                        id="mask-phone"
                        placeholder="Phone Number"
                        value="${event.phone}"
                        data-parsley-length="[10,18]"
                        data-parsley-error-message="Please enter a valid phone number."></input>
                </div>
            </c:if>
            <div id="demo">
                <div class="required field">
                    <label>Address</label>
                    <input  id="geoaddress" autocomplete="off"
                            type="text" name="address"
                            placeholder="Address or Location"
                            value="${event.address}"></input>
                </div>
                <div class="two fields">
                    <div class="field">
                        <input  id="geocity" autocomplete="off"
                                type="text" name="city"
                                placeholder="City"
                                value="${event.city}"></input>
                    </div>
                    <div class="field">
                        <input  id="geostate" autocomplete="off"
                                type="text" name="state"
                                placeholder="State"
                                value="${event.state}"></input>
                    </div>
                </div>
                <div class="two fields">
                    <div class="field">
                        <input  id="geocountry" autocomplete="off"
                                type="text" name="country" placeholder="Country"
                                value="${event.country}"></input>
                    </div>
                    <div class="field">
                        <div class="ui search" id="timezone-search">
                            <input class="prompt" type="text" name="timezone" placeholder="Timezone" value="${event.timezone.ID}"><!--  --></input>
                            <div class="results"><!--  --></div>
                        </div>
                    </div>
                </div>
                <div style="display:none">
                    <input  id="geozip" autocomplete="off"
                            type="text" name="zip"
                            value="${event.zip}"></input>
                    <input  id="geolat" autocomplete="off"
                            type="text" name="latitude"
                            value="${event.latitude}"></input>
                    <input  id="geolong" autocomplete="off"
                            type="text" name="longitude"
                            value="${event.longitude}"></input>
                </div>
            </div>
            <div class="two fields">
                <div class="field">
                    <label>Organization</label>
                    <input  type="text" name="organization"
                            autocomplete="off"
                            placeholder="Organization"
                            value="${event.organization}"></input>
                </div>
                <div class="field">
                    <label>Charity</label>
                    <input  type="text" name="charity"
                            autocomplete="off"
                            placeholder="Charity Name"
                            value="${event.charity}"></input>
                </div>
            </div>
            <div class="ui error message" style="display:none"><!--  --></div>
        </div>
        <div style="display:none">
            <field:input field="featured" id="c_com_bibsmobile_model_Event_featured" z="user-managed"/>
            <field:input field="registration" id="c_com_bibsmobile_model_Event_registration" z="user-managed"/>
            <field:input field="parking" id="c_com_bibsmobile_model_Event_parking" z="user-managed"/>
            <field:input field="general" id="c_com_bibsmobile_model_Event_general" z="user-managed"/>
            <field:input field="photo" id="c_com_bibsmobile_model_Event_photo" z="user-managed"/>
            <field:input field="photo2" id="c_com_bibsmobile_model_Event_photo2" z="user-managed"/>
            <field:input field="photo3" id="c_com_bibsmobile_model_Event_photo3" z="user-managed"/>
            <field:input field="donateUrl" id="c_com_bibsmobile_model_Event_donateUrl" z="user-managed"/>
            <field:input field="facebookUrl1" id="c_com_bibsmobile_model_Event_facebookUrl1" z="user-managed"/>
            <field:input field="photoUploadUrl" id="c_com_bibsmobile_model_Event_photoUploadUrl" z="user-managed"/>
            <field:input field="courseRules" id="c_com_bibsmobile_model_Event_courseRules" z="user-managed"/>
            <field:datetime dateTimePattern="${event_updated_date_format}" field="updated" id="c_com_bibsmobile_model_Event_updated" z="user-managed"/>
            <field:simple field="raceResults" id="c_com_bibsmobile_model_Event_raceResults" messageCode="entity_reference_not_managed" messageCodeAttribute="Race Result" z="user-managed"/>
            <field:simple field="resultsFile" id="c_com_bibsmobile_model_Event_resultsFile" messageCode="entity_reference_not_managed" messageCodeAttribute="Results File" z="user-managed"/>
            <field:simple field="raceImage" id="c_com_bibsmobile_model_Event_raceImage" messageCode="entity_reference_not_managed" messageCodeAttribute="Race Image" z="user-managed"/>
            <field:simple render="false" field="eventAwardCategorys" id="c_com_bibsmobile_model_Event_eventAwardCategorys" messageCode="entity_reference_not_managed" messageCodeAttribute="Event Award Category" z="user-managed"/>
            <field:simple field="resultsFiles" id="c_com_bibsmobile_model_Event_resultsFiles" messageCode="entity_reference_not_managed" messageCodeAttribute="Results File" z="user-managed"/>
            <field:simple field="raceImages" id="c_com_bibsmobile_model_Event_raceImages" messageCode="entity_reference_not_managed" messageCodeAttribute="Race Image" z="user-managed"/>
            <field:simple  render="false" field="eventAwardCategory" id="c_com_bibsmobile_model_Event_eventAwardCategory" messageCode="entity_reference_not_managed" messageCodeAttribute="Event Award Category" z="user-managed"/>
            <field:input field="running" id="c_com_bibsmobile_model_Event_running" render="true" z="user-managed"/>
            <field:checkbox field="sync" id="c_com_bibsmobile_model_Event_sync" z="user-managed"/>
            <field:input field="syncId" id="c_com_bibsmobile_model_Event_syncId" z="user-managed"/>
            <field:input render="false" field="awardCategorys" id="c_com_bibsmobile_model_Event_awardCategorys" z="user-managed"/>
            <field:simple field="alerts" id="c_com_bibsmobile_model_Event_alerts" messageCode="entity_reference_not_managed" messageCodeAttribute="Event Alert" z="user-managed"/>
            <field:simple field="maps" id="c_com_bibsmobile_model_Event_maps" messageCode="entity_reference_not_managed" messageCodeAttribute="Event Map" z="user-managed"/>
            <field:simple field="photos" id="c_com_bibsmobile_model_Event_photos" messageCode="entity_reference_not_managed" messageCodeAttribute="Event Photo" z="user-managed"/>
            <field:simple field="results" id="c_com_bibsmobile_model_Event_results" messageCode="entity_reference_not_managed" messageCodeAttribute="Event Result" z="user-managed"/>
            <field:checkbox field="regEnabled" id="c_com_bibsmobile_model_Event_regEnabled" z="user-managed"/>
            <field:datetime dateTimePattern="${event_regstart_date_format}" field="regStart" id="c_com_bibsmobile_model_Event_regStart" z="user-managed"/>
            <field:datetime dateTimePattern="${event_regend_date_format}" field="regEnd" id="c_com_bibsmobile_model_Event_regEnd" z="user-managed"/>
            <field:input field="eventUserGroup" id="c_com_bibsmobile_model_Event_eventUserGroup" z="user-managed" render="false"/>
            <field:input field="eventUserGroups" id="c_com_bibsmobile_model_Event_eventUserGroups" z="user-managed" render="false"/>
            <field:select field="eventTypes" id="c_com_bibsmobile_model_Event_eventTypes" itemValue="id" items="${eventtypes}" multiple="true" path="/eventtypes" z="user-managed"/>
            <field:input field="waiver" id="c_com_bibsmobile_model_Event_waiver" z="user-managed"/>
        </div>
    </div>
    </form:update>
</div>
<script src="/bibs-server/resources/scripts/tzid.js" type="text/javascript"><jsp:text/></script>
<c:if test='${(!build.rfid)}'>
    <c:set var="gmaps" value="https://maps.googleapis.com/maps/api/js?libraries=places&amp;sensor=false" />
    <c:set var="geocomplete_url" value="/bibs-server/resources/scripts/jquery.geocomplete.js" />
    <script src="${gmaps}" type="text/javascript"><jsp:text/></script>
    <script src="${geocomplete_url}" type="text/javascript"><jsp:text/></script>
    <script src="/bibs-server/resources/scripts/timezonedb.js" type="text/javascript"><jsp:text/></script>
</c:if>
<script>
    window.onload = init;

    function init(){
        initInfo();
        initDateTimePickers();
        setValidation();
        <c:if test='${(!build.rfid)}'>
            setGeocomplete();
            jQuery('#timezone-search').search({
                source: timezoneId,
                searchFields: ['title'],
                searchFullText: true
            });
            preventGeocompleteBlur();
        </c:if>
    }

    function initInfo(){
        var desc = '${fn:escapeXml(event.description)}';
        jQuery('textarea[name="description"]').val(desc.replace('&amp;#039;', '\''));
        var form = jQuery('#event').attr('autocomplete', 'off');
    }

    function gunToggle(){
        var status = jQuery('input[name="gunFired"]').prop('checked');
        if( status === false ){
            jQuery("#reg").html('<span class="glyphicon glyphicon-ok"></span>');
        }else if( status === true){
            jQuery("#reg").html('<span class="glyphicon glyphicon-remove"></span>');
        }
        jQuery('input[name="gunFired"]').prop('checked', !status);
    }

    function getCurrentTimezone(lat, lng){
        var tz = new TimeZoneDB;
        tz.getJSON({
            key: "9LX7B46RBTP0",
            lat: lat,
            lng: lng
        }, function(data){
            if(data.zoneName !== ""){
                var userInputTz = jQuery('input[name="timezone"]').val();
                if( data.zoneName !== userInputTz ){
                    if( userInputTz !== "" ){
                        if( confirm('This address is not within the timezone you specified. The timezone you input will be replaced with the one corresponding to this address.') ){
                        }
                    }
                    jQuery('input[name="timezone"]').val(data.zoneName);
                    jQuery('input[name="timezone"]').prop('readonly', 'readonly');
                    jQuery('input[name="timezone"]').css('background-color', 'rgba(0,0,0,0.03)');
                }
            }
        });
    }

    function initDateTimePickers(){
        var eventTime = "${event.timeStartLocal}";
        var momentEventTime = moment(eventTime, 'MM/DD/YYYY h:mm:ss a').format('MM/DD/YYYY h:mm:ss a');
        jQuery("#eventDatepicker").val(momentEventTime);
        jQuery("#eventDatepicker")
            .datetimepicker({
                defaultDate: momentEventTime,
                dateFormat: 'MM/DD/YYYY h:mm:ss a',
                useSeconds: true,
                sideBySide: true
            });

        jQuery("#removetime").click(function(){
            jQuery('input[name="gunTime"]').val("");
        });
    }

    function setValidation(){
        jQuery('#eventForm').form({
            fields: {
                name:     {
                    identifier  : 'name',
                    rules: [{
                        type   : 'empty',
                        prompt : 'Please enter an event name!'
                    }]
                },timeStartLocal:     {
                    identifier  : 'timeStartLocal',
                    rules: [{
                        type   : 'empty',
                        prompt : 'Please enter a start time for this event!'
                    }]
                },website:     {
                    identifier  : 'website',
                    rules: [{
                        type   : 'empty',
                        prompt : 'Please enter a website address!'
                    },{
                        type   : 'url',
                        prompt : 'Please enter a valid website address!'
                    }]
                },phone:     {
                    identifier  : 'phone',
                    rules: [{
                        type   : 'empty',
                        prompt : 'Please enter a phone number!'
                    },{
                        type   : 'minLength[10]',
                        prompt : 'Please enter at least 10 digits for the phone number!'
                    }]
                },address:     {
                    identifier  : 'address',
                    rules: [{
                        type   : 'empty',
                        prompt : 'Please enter an address for this event!'
                    }]
                },
            }
        });
        // jQuery('#event').parsley({
        //     errorsWrapper: '<div class="has-error"></div>',
        //     errorTemplate: '<span></span>'
        // });
    }

    function preventGeocompleteBlur(){
        jQuery('#proceed').click(function(){
            jQuery("#event").submit(function(e){
                e.preventDefault();
                var valid = jQuery('#eventForm').form('validate form');
                var $submit = jQuery('#proceed');
                    $submit.addClass('loading').addClass('disabled');

                var $errors = jQuery('#eventForm').find('.ui.error.message');
                if(valid){
                    $submit.removeClass('loading').removeClass('disabled');
                    if( addr == "" ){
                        jQuery('#geoaddress').val(misc);
                    }else{
                        jQuery('#geoaddress').val(addr);
                    }

                    var localdate = jQuery('input[name="timeStartLocal"]').val();
                    localdate = moment(localdate, 'MM/DD/YYYY h:mm:ss a').format('MM/DD/YYYY hh:mm:ss a');
                    jQuery('input[name="timeStartLocal"]').val(localdate);
                    jQuery('input[name="PreventChromeAutocomplete"]').removeAttr('name');

                    jQuery('#geocity').val(city);
                    jQuery('#geostate').val(state);
                    jQuery('#geocountry').val(country);

                    this.submit();
                }else{
                    $submit.removeClass('loading').removeClass('disabled');
                    $errors.show();
                    jQuery('input').on('change keyup', function(){
                        valid = jQuery('#eventForm').form('validate form');
                        if(valid){
                            $errors.hide();
                        }
                    });
                }
            });
        });
    }

    // creating new variables to prevent full control given to autocomplete feature
    var addr = ""; var city = ""; var state = ""; var country = ""; var misc = "";
    function setGeocomplete(){
        addr = jQuery('#geoaddress').val();
        city = jQuery('#geocity').val();
        state = jQuery('#geostate').val();
        country = jQuery('#geocountry').val();
        console.log(addr,city,state,country,misc)
        jQuery("#demo input").geocomplete({
            details: ".details",
            detailsAttribute: "data-geo",
            types: ["geocode", "establishment"],
            blur: false
        }).bind("geocode:result", function(event, result){
            addr = ""; city = ""; state = ""; country = ""; misc = "";
            console.log(result);
            var formatted_addr = result.formatted_address;
            var components = result.address_components;
            jQuery.each(components, function(i, d){
                switch(d.types[0]){
                    case 'natural_feature':
                        if( d.long_name !== null ){
                            misc = d.long_name;
                        }
                        break;
                    case 'street_number':
                        if( d.long_name !== null ){
                            addr = d.long_name + " ";
                        }
                        break;
                    case 'premise':
                        if( d.long_name !== null ){
                            if( addr == "" ){
                                addr = d.long_name + " ";
                            }
                        }
                        break;
                    case 'route':
                        if( d.long_name !== null ){
                            jQuery('#geoaddress').val(addr + d.long_name);
                            addr = addr + d.long_name;
                        }
                        break;
                    case 'sublocality_level_4':
                        if( d.long_name !== null ){
                            jQuery('#geoaddress').val(addr + d.long_name);
                            addr = addr + " " + d.long_name;
                        }
                        break;
                    case 'locality':
                        if( d.long_name !== null ){
                            jQuery("#geocity").val(d.long_name);
                            city = d.long_name;
                        }
                        break;
                    case 'administrative_area_level_4':
                        if( d.short_name !== null ){
                            if( city !== d.short_name ){
                                jQuery("#geocity").val(d.short_name);
                                city = city + ", " + d.short_name;
                            }
                        }
                        break;
                    case 'administrative_area_level_3':
                        if( d.short_name !== null ){
                            var currCity = jQuery("#geocity").val();
                            if( currCity !== "" ){
                                jQuery("#geocity").val(currCity + ", " + d.short_name);
                                city = city + ", " + d.short_name;
                            }
                            else{
                                jQuery("#geocity").val(d.short_name);
                            }
                        }
                        break;
                    case 'administrative_area_level_1':
                        if( d.short_name !== null ){
                            state = d.short_name;
                            jQuery("#geostate").val(d.short_name);
                        }
                        break;
                    case 'country':
                        if( d.long_name !== null ){
                            country = d.long_name;
                            jQuery("#geocountry").val(d.long_name);
                        }
                        break;
                    case 'postal_code':
                        if( d.long_name !== null ){
                            jQuery("#geozip").val(d.long_name);
                        }
                        break;
                }
            })

            if( addr == "" ){
                jQuery('#geoaddress').val(misc);
            }else{
                jQuery('#geoaddress').val(addr);
                console.log('address should be: ' + addr);
            }
            jQuery('#geocity').val(city);
            jQuery('#geostate').val(state);
            jQuery('#geocountry').val(country);

            var longitude = result.geometry.location.lng();
            var lat =  result.geometry.location.lat();
            if( longitude !== null ){
                jQuery("#geolong").val(longitude);
            }
            if( lat !== null ){
                jQuery("#geolat").val(lat);
            }

            getCurrentTimezone(lat, longitude);
        }).bind("geocode:error", function(results, status){
            if( status == 'google.maps.GeocoderStatus.ZERO_STATUS'){
                console.log("zero status");
            }

            if( jQuery("#geocity").val() == "" ){
                var geoaddr = jQuery("#geoaddress").val();
                var splitaddr = geoaddr.split(",");
                jQuery("#geocity").val(splitaddr[1]);
                jQuery("#geostate").val(splitaddr[2]);
            }
        });
    }

    function clearForm(){
        jQuery("#geoaddress").val("");
        jQuery("#geocity").val("");
        jQuery("#geostate").val("");
        jQuery("#geocountry").val("");
        jQuery("#geozip").val("");
        jQuery("#geolong").val("");
        jQuery("#geolat").val("");
    }
</script>
</div>
