<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<div  xmlns:c="http://java.sun.com/jsp/jstl/core"
	 xmlns:sec="http://www.springframework.org/security/tags" xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:page="urn:jsptagdir:/WEB-INF/tags/form" xmlns:table="urn:jsptagdir:/WEB-INF/tags/form/fields" version="2.0">
    <jsp:directive.page contentType="text/html;charset=UTF-8"/>
    <jsp:output omit-xml-declaration="yes"/>
	
	<style>
	.corners{
		margin: 16px;
		padding: 16px;
		border:solid #DDD 1px;
		border-radius: 5px;
		margin: 6px;
		padding: 6px;
	}
	.event-row{
		border:solid #DDD 1px;
		border-radius: 5px;
		width: 600px;
		overflow: hidden;
		margin: 16px;
		padding: 16px;
	}
	.event-name{
		font-size: 28px;
		font-weight: bold;
		margin-right: 12px;
	}
	.reader-title{
	}
	.reader{
		float: left;
		width: 420px;
	}
	#readers{
		float: left;
	}
	small{
		color: grey;
		font-size: 14px;
		font-weight: none;
	}
	</style>
	
<div id="reader-list">
	<div id="reader-template" style="display:none">
		<div id="reader---id" class="reader corners">
			<span id="reader-title---id--" class="reader-title"
				style="margin:0;margin-left: 3px;"><strong>Reader --url-- </strong>  
			<span id="reader-pos---id--"
				style="margin:0;margin-left: 3px;">--position--, </span>
			<span id="reader-status---id--"
				style="margin:0;margin-left: 3px;">Not Connected</span>
			</span>
			<button id="btn-update---id--" type="button" class="btn btn-info" 
				style="margin:0;margin-left: 3px;"
				onclick="timerUpdate(--id--);">Edit</button>
			<button id="btn-connect---id--" type="button" class="btn btn-default" 
				style="margin:0;margin-left: 3px;"
				onclick="timerConnect(--id--);">Connect</button>
			<span id="reader-progress---id--">
				<img src="/bibs-server/resources/images/loading.gif" title="loading..."/> 
	   		</span>
		<button id="btn-start---id--" type="button" class="btn btn-success" 
			style="margin:0;margin-left: 3px;display:none;"
			onclick="startReader(--id--);">Start</button>
		<button id="btn-stop---id--" type="button" class="btn btn-danger" 
			style="margin:0;margin-left: 3px;display:none;"
			onclick="stopReader(--id--);">Stop</button>
   		</div>
	</div>
	
	<div id="readers" >
	</div>
</div>
<div style="clear:both"/>
<div id="mgmt-view" style="margin:10px;" >

	 <div id="events-dropdown" style="padding-bottom:10px;">
        <select class="form-control" id="event" name="event" style="width:300px"
        	onchange="addEvent()">
            <option value="0" selected="true">Select an Event...</option>
            <c:forEach items="${events}" var="event" varStatus="i">
                <option value="${event.id}">${ event.name }</option>
            </c:forEach>
        </select>
    </div>
	
	<div id="eventTemplate" style="display:none;">
		<div id="event---event_id--" class="event-row">
			<div>
			<span class="event-name">--event_name--</span>
			<span id="starttime-section---event_id--" style="display:none;">
			<strong>Start time: </strong>
			<span id="starttime---event_id--">--event_starttime--</span></span>
			<button  type="button" class="btn btn-info"
				onclick="window.location='/bibs-server/events/--event_id--?form'"> Edit </button> 
			<button id="btn-gun---event_id--" type="button" class="btn btn-danger"
				onclick="gun(--event_id--);"> Fire Gun! </button> 
			<button id="btn-done---event_id--" type="button" class="btn btn-default" 
				onclick="stopRunning(--event_id--);"> Finish </button>
			<button id="runners-done---event_id--"  type="button" class="btn" >
				</button>
			<button id="event-timer---event_id--"  type="button" class="btn" 
				style="display:none;">0
				</button>
			<button id="event-timer-str---event_id--"  type="button" class="btn" 
				style="display:none;">
				</button>
			</div>
			<table id="results--event_id--" class="table" style="margin:30px;display:none;"><tr><td></td></tr></table>
		</div>
	</div>
	
	<div id="events"></div>
	
</div>
	
<script>
var runningEventCount = 1;
var readerOn=false;
var readerStatus = 0;

window.onload = racedayInit;
// window.onunload = racedayEnd;

function racedayInit(){
	getRunning();
	getReaders();
}

function getTimer(id){
	//stopReader();
}

function timerUpdate(id){
	window.location = "/bibs-server/timers/"+id+"?form";
}

function timerStatus(id){
	jQuery("#reader-progress-"+id).show();
	var r = jQuery.ajax({
		url: "/bibs-server/timers/status/"+id,
		type: "GET",
		dataType: "html"
		});
	r.done(function( data ) {
    	readerStatus = Math.max(0,data); 
    	var rtn = "Not Connected";
    	if(readerStatus == 0){
    		rtn = "Disconnected";
    		jQuery("#btn-connect-"+id).show();
    	}else if(readerStatus == 1){
    		rtn = "Connected";
    		jQuery("#btn-start-"+id).show();
    		jQuery("#btn-stop-"+id).hide();
    		jQuery("#btn-connect-"+id).hide();
    	}else if(readerStatus == 2){
    		rtn = "Reading...";
    		startReader(id);
    		jQuery("#btn-start-"+id).hide();
    		jQuery("#btn-stop-"+id).show();
    		jQuery("#btn-connect-"+id).hide();
    	}else if(readerStatus == 3){
    		rtn = "Writing...";
    		jQuery("#btn-connect-"+id).show();
    	}
    	
    	jQuery("#reader-status-"+id).html(rtn);
    	jQuery("#reader-progress-"+id).hide();
	});
	r.fail(function( jqXHR, textStatus ) {
		//alert("Timing Hardware Not Found");
	});
}

function timerConnect(id){
	jQuery("#reader-progress-"+id).show();
	var r = jQuery.ajax({
		url: "/bibs-server/timers/connect/"+id,
		type: "GET",
		dataType: "html"
		});
	r.done(function( data ) {
		timerStatus(id);
	});
	r.fail(function( jqXHR, textStatus ) {
		timerStatus(id);
	});
}

function lookupStartTime(eventId){
	var r = jQuery.ajax({
		url: "/bibs-server/events/"+eventId,
		type: "GET",
		dataType: "json"
		});
	r.done(function( data ) {
		var date = new Date(data.timeStart);
		var dateStr = date.toString().split("GMT")[0];
		jQuery('#starttime-'+eventId).html(dateStr);
	});
	r.fail(function( jqXHR, textStatus ) {
		jQuery('#starttime-'+eventId).html(new Date());
	});
}

function addEvent(){
	var eventId = jQuery("#event").val();
	if(null==eventId || !(eventId>0)) return false;
	var eventName = jQuery("#event option[value='"+eventId+"']").text();
	makeEventRow(eventId,eventName);
	setRunning(eventId,runningEventCount++);
	// getStartTime();
	queryRunnerCount(eventId);
}

function makeReaderRow(readerObj){
	var position = "Starting Line";
	if(readerObj.position) position = "Finish Line";
	var row = jQuery("#reader-template").html()
		.replace(/--id--/g,readerObj.id)
		.replace(/--position--/g,position)
		.replace(/--url--/g,readerObj.id);
	jQuery("#readers").append(row);
}

function makeEventRow(eventId,eventName){
	var eventRow = jQuery("#eventTemplate").html()
		.replace(/--event_id--/g,eventId)
		.replace(/--event_name--/g,eventName);
	jQuery("#events").append(eventRow);
	jQuery("#event option[value='"+eventId+"']").remove();
}

function getStartTime(){
	jQuery("#events > .event-row").each(function(index,element){
		var eventId = element.id.split("-")[1];
		var data = jQuery("#starttime-"+eventId).html();
		if(data =="--event_starttime--") lookupStartTime(eventId);
	});
}

function startReader(id){
	var readerStart = jQuery.ajax({
		url: "/bibs-server/timers/start/"+id,
		type: "GET",
		dataType: "html"
		});
	readerStart.done(function( msg ) {
		if(msg!="true"){
			alert("Error starting reader.");
		}else{
			jQuery('#btn-start-'+id).hide();
			jQuery('#btn-stop-'+id).show();
			jQuery("#reader-progress-"+id).show();
			jQuery("#reader-status-"+id).html("Reading...");
			readerOn=true;
		}
	});
	readerStart.fail(function( jqXHR, textStatus ) {
		alert( "Request failed: " + textStatus );
		return false;
	});
	getReaderResults();
	setInterval(function(){
		if(!readerOn) return true;
		getReaderResults();
	},3000);
}

function initTimer(eventId){
	var now = new Date().getTime();
	var req = jQuery.ajax({
		url: "/bibs-server/events/"+eventId,
		type: "GET",
		dataType: "json"
		});
	req.done(function( data ) {
		if(!eval(data.gunFired)){
			jQuery("#event-timer-str-"+eventId).hide();
			return true;
		}
			jQuery("#event-timer-"+eventId).html(now-data.timerStart);
			timer(eventId);
			jQuery("#event-timer-str-"+eventId).show();
			setInterval(function(){
				timer(eventId);
			},1000);
	});
	
}

function timer(eventId){
	var l = Math.max(0,jQuery("#event-timer-"+eventId).html()) + 1000 // add 1 sec
	jQuery("#event-timer-"+eventId).html(l);
	var e = jQuery("#event-timer-str-"+eventId);
	getHoursMinutesSeconds(e,l);
	
}


function getReaderResults(){
	jQuery("#events > .event-row").each(function(index,element){
		var eventId = element.id.split("-")[1];
		readerQuery(eventId);
	});
}

function readerQuery(eventId){
	console.log("readerQuery "+eventId);
	var request = jQuery.ajax({
		url: "/bibs-server/events/results?event="+eventId,
		type: "GET",
		dataType: "json"
		});
	request.done(function( data ) {
			jQuery("#results"+eventId).prepend( makeTable(data, jQuery( "#results"+eventId).html(), eventId ) );
			jQuery("#results"+eventId).show();
			});
	request.fail(function( jqXHR, textStatus ) {
		// error?
		});
}

function makeTable(data,results,eventId){
	results = "";
	for(var i in data){
		clearTime(data[i].bib);
		incrementDone(eventId);
		results += "<tr>";
		results += "<td>"+data[i].bib+"</td>";
		results += "<td>"+data[i].timeofficial+"</td>";
		results += "<td>"+data[i].firstname+" "+data[i].lastname+"</td>";
		results += "<td>("+data[i].gender+")"+data[i].age+"</td>";
		results += "<td>"+data[i].city+", "+data[i].state+"</td>";
		results += "</tr>";
	}
	return results;
}

function incrementDone(eventId){
	var done = Math.max(0,jQuery("#runners-done-"+eventId).html().split("/")[0]);
	var total = Math.max(0,jQuery("#runners-done-"+eventId).html().split("/")[1]);
	jQuery("#runners-done-"+eventId).html((done+1)+"/"+total);
}

function stopReader(id){
	var request = jQuery.ajax({
		url: "/bibs-server/timers/stop/"+id,
		type: "GET",
		dataType: "html"
		});
	request.done(function( msg ) {
		if(msg=="true"){
			jQuery('#btn-stop-'+id).hide();
			jQuery('#btn-start-'+id).show();
			jQuery("#timer-progress-"+id).hide();
			jQuery("#timer-status-"+id).html("Stopping...");
			timerStatus(id);
			readerOn=false;
		}
		});
	request.fail(function( jqXHR, textStatus ) {
		timerStatus(id);
		});
}

function setRunning(eventId,order){
	var request = jQuery.ajax({
		url: "/bibs-server/events/run?event="+eventId+"&amp;order="+order,
		type: "GET",
		dataType: "html"
		});
	request.done(function( msg ) {
		if(msg!="true"){
			// error
		}
		});
	request.fail(function( jqXHR, textStatus ) {
		// error
		});
}

function stopRunning(eventId){
	jQuery("#event-"+eventId).slideUp("slow",function(){
			jQuery("#event-"+eventId).remove();
		});
	var request = jQuery.ajax({
		url: "/bibs-server/events/done?event="+eventId,
		type: "GET",
		dataType: "html"
		});
	request.done(function( msg ) {
		if(msg!="true") {
			//error
		}
		});
	request.fail(function( jqXHR, textStatus ) {
		// error
		});
}

function gun(eventId){
	var request = jQuery.ajax({
		url: "/bibs-server/events/gun?event="+eventId,
		type: "GET",
		dataType: "html"
		});
	request.done(function( msg ) {
		if(msg=="true") 
			jQuery("#btn-done-"+eventId).show();
			initTimer(eventId);
		});
		//jQuery("#starttime-"+eventId).html(new Date().toString().split("GMT")[0]);
		jQuery("#btn-gun-"+eventId).hide();
	request.fail(function( jqXHR, textStatus ) {
		alert("Error firing gun.")
		});
}

function getRunning(eventId,order){
	var request = jQuery.ajax({
		url: "/bibs-server/events/running",
		type: "GET",
		dataType: "json"
		});
	request.done(function( data ) {
		for(var i in data){
			var eventId = data[i].id;
			var eventName = data[i].name;
			makeEventRow(eventId,eventName);
			//jQuery("#starttime-"+eventId).html(new Date(data[i].timeStart).toLocaleTimeString());
			queryRunnerCount(eventId);
			initTimer(eventId);
			if(data[i].gunFired == true){
				jQuery("#btn-gun-"+eventId).hide();
				jQuery("#btn-done-"+eventId).show();
			}
			runningEventCount++;
		}
		});
	request.fail(function( jqXHR, textStatus ) {
		// error?
		});
}

function getReaders(){
	var request = jQuery.ajax({
		url: "/bibs-server/timers",
		type: "GET",
		dataType: "json"
		});
	request.done(function( data ) {
		for(var i in data){
			makeReaderRow(data[i]);
			timerStatus(data[i].id)
		}
		});
	request.fail(function( jqXHR, textStatus ) {
		// error?
		});
}
function queryRunnerCount(eventId){
	var request = jQuery.ajax({
		url: "/bibs-server/events/count?event="+eventId,
		type: "GET",
		dataType: "html"
		});
	var request2 = jQuery.ajax({
		url: "/bibs-server/events/countcomplete?event="+eventId,
		type: "GET",
		dataType: "html"
		});
	request.done(function( data ) {
		var done = 0;
		var total = Math.max(0,data);
		request2.done(function( data1 ) {
			done = Math.max(0,data1);
			jQuery("#runners-done-"+eventId).html(done+"/"+total);
			});
		});
}

</script>

</div>
