<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<div  xmlns:c="http://java.sun.com/jsp/jstl/core"
	 xmlns:sec="http://www.springframework.org/security/tags" xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:page="urn:jsptagdir:/WEB-INF/tags/form" xmlns:table="urn:jsptagdir:/WEB-INF/tags/form/fields" version="2.0">
    <jsp:directive.page contentType="text/html;charset=UTF-8"/>
    <jsp:output omit-xml-declaration="yes"/>
	
	<style>
	.corners{
		margin: 16px;
		padding: 16px;
		border:solid #DDD 1px;
		border-radius: 5px;
	}
	.event-row{
		margin: 16px;
		padding: 16px;
		border:solid #DDD 1px;
		border-radius: 5px;
		float: left;
		width: 600px;
		overflow: hidden;
	}
	.event-name{
		font-size: 28px;
		font-weight: bold;
		margin-right: 12px;
	}
	small{
		color: grey;
		font-size: 14px;
		font-weight: none;
	}
	</style>
	
	<div id="timer-functions" style="margin-bottom: 16px;" class="corners">
	
		<span id="reader-status-title"
			style="margin:0;margin-left: 3px;"><strong>Reader Status:</strong> 
		<span id="reader-status"
			style="margin:0;margin-left: 3px;"> Not Connected </span>
		</span>
		<button id="btn-connect" type="button" class="btn btn-default" 
			style="margin:0;margin-left: 3px;"
			onclick="timerConnect();">Connect</button>
		<button id="btn-start" type="button" class="btn btn-success" 
			style="margin:0;margin-left: 3px;display:none;"
			onclick="startReader();">Start Scanning</button>
		<button id="btn-stop" type="button" class="btn btn-danger" 
			style="margin:0;margin-left: 3px;display:none;"
			onclick="stopReader();">Stop Scanning</button>
		<button id="btn-purge" type="button" class="btn btn-default" 
			style="margin:0;margin-left: 3px;display:none;"
			onclick="timerPurge();">Clear</button>
		<span id="progress">
			<img src="/bibs-server/resources/images/loading.gif" title="loading"/> 
   		</span>
	
	</div>

<div id="mgmt-view" style="margin-left:30px;display:none;" class="pull-left">

	 <div class="pull-left" style="padding-bottom:16px;">
        <div style="padding:6px;" class="pull-left">
            <strong>Select Event(s) to Run</strong>
        </div>
        <select class="form-control pull-left" id="event" name="event" style="width:300px">
            <c:forEach items="${events}" var="event" varStatus="i">
                <option value="${event.id}">${ event.name }</option>
            </c:forEach>
        </select>
		<button id="btn-add" type="button" class="btn btn-primary" 
			style="margin:0;margin-left: 3px;"
			onclick="addEvent();">Add Event</button>
    </div>
	<div style="clear:both;"/>
	
	<div id="eventTemplate" style="display:none;">
		<div id="event---event_id--" class="event-row">
			<div>
			<span class="event-name">--event_name--</span>
			<span id="starttime-section---event_id--" style="display:none;">
			<strong>Start time: </strong>
			<span id="starttime---event_id--">--event_starttime--</span></span>
			<button  type="button" class="btn btn-info"
				onclick="window.location='/bibs-server/events/--event_id--?form'"> Edit </button> 
			<button id="btn-gun---event_id--" type="button" class="btn btn-danger"
				onclick="gun(--event_id--);"> Fire Gun! </button> 
			<button id="btn-done---event_id--" type="button" class="btn btn-default" 
				onclick="stopRunning(--event_id--);"> Finish </button>
			<button id="runners-done---event_id--"  type="button" class="btn btn-default" >
				</button>
			<button id="event-timer---event_id--"  type="button" class="btn btn-default" 
				style="display:none;">0
				</button>
			<button id="event-timer-str---event_id--"  type="button" class="btn btn-default" 
				style="display:none;">
				</button>
			</div>
			<table id="results--event_id--" class="table" style="margin:30px;display:none;"><tr><td></td></tr></table>
		</div>
	</div>
	
	<div id="events"></div>
	
</div>
	
<script>
var runningEventCount = 1;
var readerOn=false;
var readerStatus = 0;

window.onload = racedayInit;
window.onunload = racedayEnd;

function racedayInit(){
	jQuery("#progress").hide();
	getRunning();
	timerStatus();
}

function racedayEnd(){
	//stopReader();
}

function timerStatus(){
	jQuery("#progress").show();
	var r = jQuery.ajax({
		url: "/bibs-server/events/timer/status",
		type: "GET",
		dataType: "html"
		});
	r.done(function( data ) {
    	readerStatus = data; 
    	var rtn = "No Connection";
    	if(readerStatus == 0){
    		rtn = "Disconnected";
    	}else if(readerStatus == 1){
    		rtn = "Connected";
    	}else if(readerStatus == 2){
    		rtn = "Reading...";
    		startReader();
    	}else if(readerStatus == 3){
    		rtn = "Writing...";
    		timerConnect();
    	}
    	
    	if(readerStatus == 1 || readerStatus == 2){
    		jQuery("#mgmt-view").show();
    		jQuery("#btn-connect").hide();
    		jQuery("#btn-start").show();
    		jQuery("#btn-purge").show();
    	}else{
    		jQuery("#mgmt-view").hide();
    		jQuery("#btn-connect").show();
    		jQuery("#btn-start").hide();
    		jQuery("#btn-purge").hide();
    	}
    	
    	jQuery("#reader-status").html(rtn);
    	jQuery("#progress").hide();
	});
	r.fail(function( jqXHR, textStatus ) {
		//alert("Timing Hardware Not Found");
		jQuery("#mgmt-view").hide();
	});
}

function timerConnect(){
	jQuery("#progress").show();
	var r = jQuery.ajax({
		url: "/bibs-server/events/timer/reconnect",
		type: "GET",
		dataType: "html"
		});
	r.done(function( data ) {
		if(data == "true"){
    		jQuery("#mgmt-view").show();
			jQuery("#btn-start").show(200);
			jQuery("#btn-connect").hide(200);
		}
		jQuery("#progress").hide();
		timerStatus();
	});
	r.fail(function( jqXHR, textStatus ) {
		jQuery("#mgmt-view").hide();
		jQuery("#progress").hide();
	});
}

function timerPurge(){
	var r = jQuery.ajax({
		url: "/bibs-server/events/timer/purge",
		type: "GET",
		dataType: "html"
		});
	r.done(function( data ) {
		if(data == "true"){
    		// alert("Reader cleared.");
		}else{
			jQuery("#btn-purge").html("Error");
		}
	});
	r.fail(function( jqXHR, textStatus ) {
	});
}

function lookupStartTime(eventId){
	var r = jQuery.ajax({
		url: "/bibs-server/events/"+eventId,
		type: "GET",
		dataType: "json"
		});
	r.done(function( data ) {
		var date = new Date(data.timeStart);
		var dateStr = date.toString().split("GMT")[0];
		jQuery('#starttime-'+eventId).html(dateStr);
	});
	r.fail(function( jqXHR, textStatus ) {
		jQuery('#starttime-'+eventId).html(new Date());
	});
}

function addEvent(){
	var eventId = jQuery("#event").val();
	if(null==eventId) return false;
	var eventName = jQuery("#event option[value='"+eventId+"']").text();
	makeEventRow(eventId,eventName);
	setRunning(eventId,runningEventCount++);
	// getStartTime();
	queryRunnerCount(eventId);
}

function makeEventRow(eventId,eventName){
	var eventRow = jQuery("#eventTemplate").html()
		.replace(/--event_id--/g,eventId)
		.replace(/--event_name--/g,eventName);
	jQuery("#events").append(eventRow);
	jQuery("#event option[value='"+eventId+"']").remove();
}

function getStartTime(){
	jQuery("#events > .event-row").each(function(index,element){
		var eventId = element.id.split("-")[1];
		var data = jQuery("#starttime-"+eventId).html();
		if(data =="--event_starttime--") lookupStartTime(eventId);
	});
}

function closeWarning(){
	// do not close
	var warning = "The finish line reader has been started!\r\nIf you leave this page, the Announcer's list will be reset.";
	//alert(warning);
	//window.onbeforeunload = function(e) { return warning; };
}

function startReader(){
	readerOn=true;
	var readerStart = jQuery.ajax({
		url: "/bibs-server/events/start",
		type: "GET",
		dataType: "html"
		});
	readerStart.done(function( msg ) {
		if(msg!="true"){
			alert("Error starting reader.");
		}else{
			jQuery('#btn-start').hide();
			jQuery('#btn-stop').show(200);
			jQuery("#progress").show();
			jQuery("#reader-status").html("Reading...");
		}
	});
	readerStart.fail(function( jqXHR, textStatus ) {
		alert( "Request failed: " + textStatus );
		return false;
	});
	getReaderResults();
	setInterval(function(){
		if(!readerOn) return true;
		getReaderResults();
	},3000);
	//closeWarning();
}

function initTimer(eventId){
	var starttime = 0;
	var now = new Date().getTime();
	var req = jQuery.ajax({
		url: "/bibs-server/events/"+eventId,
		type: "GET",
		dataType: "json"
		});
	req.done(function( data ) {
		var req2 = jQuery.ajax({
			url: "/bibs-server/events/timer/time",
			type: "GET",
			dataType: "html"
			});
		req2.done(function( data2 ) {
			now = Math.max(0,data2);
			starttime = now - Math.max(0,data.timerStart);
			jQuery("#event-timer-"+eventId).html(starttime);
			timer(eventId);
			jQuery("#event-timer-str-"+eventId).show();
			setInterval(function(){
				timer(eventId);
			},1000);
		});
	});
	
}

function timer(eventId){
	var l = Math.max(0,jQuery("#event-timer-"+eventId).html()) + 1000 // add 1 sec
	jQuery("#event-timer-"+eventId).html(l);
	var e = jQuery("#event-timer-str-"+eventId);
	getHoursMinutesSeconds(e,l);
	
}


function getReaderResults(){
	jQuery("#events > .event-row").each(function(index,element){
		var eventId = element.id.split("-")[1];
		readerQuery(eventId);
	});
}

function readerQuery(eventId){
	console.log("readerQuery "+eventId);
	var request = jQuery.ajax({
		url: "/bibs-server/events/results?event="+eventId,
		type: "GET",
		dataType: "json"
		});
	request.done(function( data ) {
			jQuery("#results"+eventId).prepend( makeTable(data, jQuery( "#results"+eventId).html(), eventId ) );
			jQuery("#results"+eventId).show();
			});
	request.fail(function( jqXHR, textStatus ) {
		// error?
		});
}

function makeTable(data,results,eventId){
	results = "";
	for(var i in data){
		clearTime(data[i].bib);
		incrementDone(eventId);
		results += "<tr>";
		results += "<td>"+data[i].bib+"</td>";
		results += "<td>"+data[i].timeofficial+"</td>";
		results += "<td>"+data[i].firstname+" "+data[i].lastname+"</td>";
		results += "<td>("+data[i].gender+")"+data[i].age+"</td>";
		results += "<td>"+data[i].city+", "+data[i].state+"</td>";
		results += "</tr>";
	}
	return results;
}

function incrementDone(eventId){
	var done = Math.max(0,jQuery("#runners-done-"+eventId).html().split("/")[0]);
	var total = Math.max(0,jQuery("#runners-done-"+eventId).html().split("/")[1]);
	jQuery("#runners-done-"+eventId).html((done+1)+"/"+total);
}

function stopReader(){
	readerOn=false;
	jQuery('#btn-stop').hide();
	var request = jQuery.ajax({
		url: "/bibs-server/events/stop",
		type: "GET",
		dataType: "html"
		});
	request.done(function( msg ) {
		if(msg=="true"){
			jQuery('#btn-start').show();
			jQuery("#progress").hide();
			jQuery("#timer-status").html("Stopping...");
			timerStatus();
		}else{
			jQuery('#btn-stop').show();
		}
		});
	request.fail(function( jqXHR, textStatus ) {
		timerStatus();
		});
}

function setRunning(eventId,order){
	var request = jQuery.ajax({
		url: "/bibs-server/events/run?event="+eventId+"&amp;order="+order,
		type: "GET",
		dataType: "html"
		});
	request.done(function( msg ) {
		if(msg!="true"){
			// error
		}
		});
	request.fail(function( jqXHR, textStatus ) {
		// error
		});
}

function stopRunning(eventId){
	jQuery("#event-"+eventId).remove();
	var request = jQuery.ajax({
		url: "/bibs-server/events/done?event="+eventId,
		type: "GET",
		dataType: "html"
		});
	request.done(function( msg ) {
		if(msg!="true") {
			//error
		}
		});
	request.fail(function( jqXHR, textStatus ) {
		// error
		});
}

function clearTime(bib){
	var request = jQuery.ajax({
		url: "/bibs-server/events/timer/cleartime?bib="+bib,
		type: "GET",
		dataType: "html"
		});
	request.done(function( msg ) {
		});
	request.fail(function( jqXHR, textStatus ) {
		});
}

function gun(eventId){
	var request = jQuery.ajax({
		url: "/bibs-server/events/gun?event="+eventId,
		type: "GET",
		dataType: "html"
		});
	request.done(function( msg ) {
		if(msg=="true") 
			jQuery("#btn-done-"+eventId).show();
			initTimer(eventId);
		});
		//jQuery("#starttime-"+eventId).html(new Date().toString().split("GMT")[0]);
		jQuery("#btn-gun-"+eventId).hide();
	request.fail(function( jqXHR, textStatus ) {
		alert("Error firing gun.")
		});
}

function getRunning(eventId,order){
	var request = jQuery.ajax({
		url: "/bibs-server/events/running",
		type: "GET",
		dataType: "json"
		});
	request.done(function( data ) {
		for(var i in data){
			var eventId = data[i].id;
			var eventName = data[i].name;
			makeEventRow(eventId,eventName);
			//jQuery("#starttime-"+eventId).html(new Date(data[i].timeStart).toLocaleTimeString());
			queryRunnerCount(eventId);
			initTimer(eventId);
			if(data[i].gunFired == true){
				jQuery("#btn-gun-"+eventId).hide();
				jQuery("#btn-done-"+eventId).show();
			}
			runningEventCount++;
		}
		});
	request.fail(function( jqXHR, textStatus ) {
		// error?
		});
}

function queryRunnerCount(eventId){
	var request = jQuery.ajax({
		url: "/bibs-server/events/count?event="+eventId,
		type: "GET",
		dataType: "html"
		});
	var request2 = jQuery.ajax({
		url: "/bibs-server/events/countcomplete?event="+eventId,
		type: "GET",
		dataType: "html"
		});
	request.done(function( data ) {
		var done = 0;
		var total = Math.max(0,data);
		request2.done(function( data1 ) {
			done = Math.max(0,data1);
			jQuery("#runners-done-"+eventId).html(done+"/"+total);
			});
		});
}

</script>

</div>
