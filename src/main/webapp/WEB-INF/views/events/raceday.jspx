<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<div  xmlns:c="http://java.sun.com/jsp/jstl/core"
	 xmlns:sec="http://www.springframework.org/security/tags" xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:page="urn:jsptagdir:/WEB-INF/tags/form" xmlns:table="urn:jsptagdir:/WEB-INF/tags/form/fields" version="2.0">
    <jsp:directive.page contentType="text/html;charset=UTF-8"/>
    <jsp:output omit-xml-declaration="yes"/>
	
	<style>
	.corners{
		margin: 16px;
		padding: 16px;
		border:solid #DDD 1px;
		border-radius: 5px;
		margin: 6px;
		padding: 6px;
	}
	.event-row{
		border:solid #DDD 1px;
		border-radius: 5px;
		width: 400px;
		overflow: hidden;
		padding: 10px;
		margin: 10px;
		float: left;
	}
	.event-name{
		font-size: 28px;
		font-weight: bold;
		margin-right: 12px;
	}
	.reader-title{
	}
	.reader{
		float: left;
		width: 180px;
	}
	#event{
		margin:10px; 
		width:300px;
	}
	#events{
		float: left;
	}
	#readers{
		float: left;
	}
	small{
		color: grey;
		font-size: 14px;
		font-weight: none;
	}
	</style>
	

	<div id="reader-template" style="display:none">
		<div id="reader---id" class="reader corners">
			<span id="reader-title---id--" class="reader-title"
				style="margin:0;margin-left: 3px;"><strong>Reader --count-- </strong>  
				<span id="reader-pos---id--"
					style="margin:0;margin-left: 3px;">--position--
					</span>
				<br/>
				<span id="reader-status-label"
					style="margin:0;margin-left:3px;font-weight:bold;">Status: </span>
				<span id="reader-status---id--"
					style="margin:0;margin-left: 3px;">Not Connected</span>
				<span id="reader-progress---id--">
					<img src="/bibs-server/resources/images/loading.gif" title="loading..."/> </span>
			</span>
			<div>
			<button id="btn-update---id--" type="button" class="btn btn-info" 
				style="margin:0;margin-left: 3px;"
				onclick="timerUpdate(--id--);">Edit</button>
			<button id="btn-connect---id--" type="button" class="btn btn-default" 
				style="margin:0;margin-left: 3px;"
				onclick="timerConnect(--id--);">Connect</button>
			<button id="btn-start---id--" type="button" class="btn btn-success" 
				style="margin:0;margin-left: 3px;display:none;"
				onclick="startReader(--id--);">Start</button>
			<button id="btn-stop---id--" type="button" class="btn btn-danger" 
				style="margin:0;margin-left: 3px;display:none;"
				onclick="stopReader(--id--);">Stop</button>
			</div>	
   		</div>
	</div>
	
	<div id="eventTemplate" style="display:none;">
		<div id="event---event_id--" class="event-row" style="display:none;">
			<div>
			<div id="event-name---event_id--" class="event-name">--event_name--</div>
			<span id="metrics---event_id--" >
				Runners Started: 
				<span id="start---event_id--">0</span> /
				<span class="total---event_id--">0</span>
				<br/>
				Runners Completed: 
				<span id="done---event_id--">0</span> /
				<span class="total---event_id--">0</span>
			</span>
			<button id="btn-done---event_id--" type="button" class="btn btn-default" 
				onclick="stopRunning(--event_id--);"> Finish </button>
			<button id="btn-gun---event_id--" type="button" class="btn btn-danger"
				onclick="gun(--event_id--);"> Fire Gun! </button> 
			<button id="event-timer---event_id--"  type="button" class="btn" 
				style="display:none;">0
				</button>
			<button id="event-timer-str---event_id--"  type="button" class="btn" 
				style="display:none;">
				</button>
			</div>
			<table id="results--event_id--" class="table" 
				style="padding:10px;margin:10px;display:none;"><tr><td></td></tr></table>
		</div>
	</div>
	
<table id="table-split" width="100%">
<tr><td valign="top">
	
	<div id="mgmt-view" >
		 <div id="events-dropdown" >
	        <select class="form-control" id="event" name="event"
	        	onchange="addEvent()">
	            <option value="0" selected="true">Manage an Event...</option>
	            <c:forEach items="${events}" var="event" varStatus="i">
	                <option value="${event.id}">${ event.name }</option>
	            </c:forEach> 
	        </select>
	    </div>
		<div id="events"></div>
	</div>

</td><td style="width:415px" valign="top">

	<button onclick="window.location='/bibs-server/timers?form'" 
		type="button" class="btn btn-primary">
		Add Reader
		</button>
	<div id="readers" class="corners"/>

</td></tr></table>

	
<script>
var runningEventCount = 1;
var readerOn=false;
var readerStatus = 0;

window.onload = racedayInit;
// window.onunload = racedayEnd;

function racedayInit(){
	getRunning();
	getReaders();
}

function getTimer(id){
	//stopReader();
}

function timerUpdate(id){
	window.location = "/bibs-server/timers/"+id+"?form";
}

function timerStatus(id){
	jQuery("#reader-progress-"+id).show();
	var r = jQuery.ajax({
		url: "/bibs-server/timers/status/"+id,
		type: "GET",
		dataType: "html"
		});
	r.done(function( data ) {
    	readerStatus = Math.max(0,data); 
    	var rtn = "Not Connected";
    	if(readerStatus == 0){
    		rtn = "Disconnected";
    		jQuery("#btn-connect-"+id).show();
    	}else if(readerStatus == 1){
    		rtn = "Connected";
    		jQuery("#btn-start-"+id).show();
    		jQuery("#btn-stop-"+id).hide();
    		jQuery("#btn-connect-"+id).hide();
    		timerSync(id);
    	}else if(readerStatus == 2){
    		rtn = "Reading...";
    		startReader(id);
    		jQuery("#btn-start-"+id).hide();
    		jQuery("#btn-update-"+id).hide();
    		jQuery("#btn-stop-"+id).show();
    		jQuery("#btn-connect-"+id).hide();
    	}else if(readerStatus == 3){
    		rtn = "Writing...";
    		jQuery("#btn-connect-"+id).show();
    		jQuery("#btn-stop-"+id).show();
    		jQuery("#btn-update-"+id).hide();
    	}
    	
    	jQuery("#reader-status-"+id).html(rtn);
    	jQuery("#reader-progress-"+id).hide();
	});
	r.fail(function( jqXHR, textStatus ) {
		//alert("Timing Hardware Not Found");
	});
}

function timerConnect(id){
	jQuery("#reader-progress-"+id).show();
	var r = jQuery.ajax({
		url: "/bibs-server/timers/connect/"+id,
		type: "GET",
		dataType: "html"
		});
	r.done(function( data ) {
		timerStatus(id);
	});
	r.fail(function( jqXHR, textStatus ) {
		timerStatus(id);
	});
}

function timerSync(id){
	jQuery("#reader-progress-"+id).show();
	var timerTime = jQuery.ajax({
		url: "/bibs-server/timers/time/"+id,
		type: "GET",
		dataType: "html"
		});
	timerTime.done(function( data ) {
		if(data != "true"){
			alert("Timer not in sync! "+id);
			jQuery("#reader-"+id).css("border","solid red 1px");
		}else{
			jQuery("#reader-"+id).css("border","solid green 1px");
		}
	});
}

function lookupStartTime(eventId){
	var r = jQuery.ajax({
		url: "/bibs-server/events/"+eventId,
		type: "GET",
		dataType: "json"
		});
	r.done(function( data ) {
		var date = new Date(data.timeStart);
		var dateStr = date.toString().split("GMT")[0];
		jQuery('#starttime-'+eventId).html(dateStr);
	});
	r.fail(function( jqXHR, textStatus ) {
		jQuery('#starttime-'+eventId).html(new Date());
	});
}

function addEvent(){
	var eventId = jQuery("#event").val();
	if(null==eventId || !(eventId>0)) return false;
	var eventName = jQuery("#event option[value='"+eventId+"']").text();
	makeEventRow(eventId,eventName);
	setRunning(eventId,runningEventCount++);
	readerQuery(eventId);
}

function makeReaderRow(n,readerObj){
	var position = "Starting Line";
	if(readerObj.position) position = "Finish Line";
	var row = jQuery("#reader-template").html()
		.replace(/--count--/g,n)
		.replace(/--id--/g,readerObj.id)
		.replace(/--position--/g,position)
		.replace(/--url--/g,readerObj.id);
	jQuery("#readers").append(row);
}

function makeEventRow(eventId,eventName){
	var eventRow = jQuery("#eventTemplate").html()
		.replace(/--event_id--/g,eventId)
		.replace(/--event_name--/g,eventName);
	jQuery("#events").append(eventRow);
	jQuery("#event-"+eventId).slideDown();
	jQuery("#event option[value='"+eventId+"']").remove();
	//readerQuery(eventId);
}

function startReader(id){
	var readerStart = jQuery.ajax({
		url: "/bibs-server/timers/start/"+id,
		type: "GET",
		dataType: "html"
		});
	readerStart.done(function( msg ) {
			jQuery('#btn-start-'+id).hide();
			jQuery('#btn-stop-'+id).show();
    		jQuery("#btn-update-"+id).hide();
			jQuery("#reader-progress-"+id).show();
			jQuery("#reader-status-"+id).html("Reading...");
			readerOn=true;
	});
	readerStart.fail(function( jqXHR, textStatus ) {
		timerStatus(id);
	});
	getReaderResults();
	setInterval(function(){
		if(!readerOn) return true;
		getReaderResults();
	},5000);
}

function initTimer(eventId){
	var now = new Date().getTime();
	var req = jQuery.ajax({
		url: "/bibs-server/events/"+eventId,
		type: "GET",
		dataType: "json"
		});
	req.done(function( data ) {
		if(!eval(data.gunFired)){
			jQuery("#event-timer-str-"+eventId).hide();
			return true;
		}
		jQuery("#event-timer-"+eventId).html(now-data.gunTime);
		timer(eventId);
		jQuery("#event-timer-str-"+eventId).show();
		setInterval(function(){
			timer(eventId);
		},1000);
	});
	
}

function timer(eventId){
	var l = Math.max(0,jQuery("#event-timer-"+eventId).html()) + 1000 // add 1 sec
	jQuery("#event-timer-"+eventId).html(l);
	var e = jQuery("#event-timer-str-"+eventId);
	getHoursMinutesSeconds(e,l);
	
}


function getReaderResults(){
	jQuery("#events > .event-row").each(function(index,element){
		var eventId = element.id.split("-")[1];
		readerQuery(eventId);
	});
}

function readerQuery(eventId){
	console.log("readerQuery "+eventId);
	var request = jQuery.ajax({
		url: "/bibs-server/events/results?event="+eventId,
		type: "GET",
		dataType: "json"
		});
	request.done(function( data ) {
			jQuery("#results"+eventId).html( makeTable(data, jQuery( "#results"+eventId).html(), eventId ) );
			jQuery("#results"+eventId).show();
			refreshMetrics(eventId);
			});
	request.fail(function( jqXHR, textStatus ) {
		// error?
		});
}

function makeTable(data,results,eventId){
	results = "";
	for(var i in data){
		var timeofficialdisplay = (null!=data[i].timeofficialdisplay) ? data[i].timeofficialdisplay : "";
		var firstname = (null!=data[i].firstname) ? data[i].firstname : "";
		var lastname = (null!=data[i].lastname) ? data[i].lastname : "";
		var bib = (null!=data[i].bib) ? data[i].bib : "";
		var gender = (null!=data[i].gender) ? data[i].gender : "";
		var age = (null!=data[i].age) ? data[i].age : "";
		var city = (null!=data[i].city) ? data[i].city : "";
		var state = (null!=data[i].state) ? data[i].state : "";
		
		results += "<tr>";
		results += "<td>"+timeofficialdisplay+"</td>";
		results += "<td>"+bib+"</td>";
		results += "<td>"+firstname+" "+lastname+"</td>";
		results += "<td>"+age+"</td>";
		results += "<td>"+gender+"</td>";
		results += "<td>"+city+"</td>";
		results += "<td>"+state+"</td>";
		results += "</tr>";
	}
	return results;
}

function stopReader(id){
	var request = jQuery.ajax({
		url: "/bibs-server/timers/stop/"+id,
		type: "GET",
		dataType: "html"
		});
	request.done(function( msg ) {
			jQuery('#btn-stop-'+id).hide();
			jQuery('#btn-start-'+id).show();
    		jQuery("#btn-update-"+id).show();
			jQuery("#timer-progress-"+id).hide();
			jQuery("#timer-status-"+id).html("Stopping...");
			timerStatus(id);
			readerOn=false;
		});
	request.fail(function( jqXHR, textStatus ) {
		timerStatus(id);
		});
}

function setRunning(eventId,order){
	var request = jQuery.ajax({
		url: "/bibs-server/events/run?event="+eventId+"&amp;order="+order,
		type: "GET",
		dataType: "html"
		});
	request.done(function( msg ) {
		if(msg!="true"){
			// error
		}
		getRunning(); // already running?
		});
	request.fail(function( jqXHR, textStatus ) {
		// error
		});
}

function stopRunning(eventId){
	var request = jQuery.ajax({
		url: "/bibs-server/events/done?event="+eventId,
		type: "GET",
		dataType: "html"
		});
	request.done(function( msg ) {
		if(msg=="true") {
			var eventName = jQuery("#event-name-"+eventId).html();
			jQuery("#event-"+eventId).slideUp("slow",function(){
					jQuery("#event-"+eventId).remove();
				});
			jQuery("#event").append("<option value="+eventId+">"+eventName+"</option>");
		}
		});
	request.fail(function( jqXHR, textStatus ) {
		// error
		});
}

function gun(eventId){
	var request = jQuery.ajax({
		url: "/bibs-server/events/gun?event="+eventId,
		type: "GET",
		dataType: "html"
		});
	request.done(function( msg ) {
		if(msg=="true") {
			jQuery("#btn-gun-"+eventId).hide();
			//jQuery("#btn-done-"+eventId).show();
			initTimer(eventId);
		}
		});
	request.fail(function( jqXHR, textStatus ) {
		alert("Error firing gun.")
		});
}

function getRunning(){
	var request = jQuery.ajax({
		url: "/bibs-server/events/running",
		type: "GET",
		dataType: "json"
		});
	request.done(function( data ) {
		for(var i in data){
			var eventId = data[i].id;
			var eventName = data[i].name;
			makeEventRow(eventId,eventName);
			//jQuery("#starttime-"+eventId).html(new Date(data[i].timeStart).toLocaleTimeString());
			initTimer(eventId);
			if(data[i].gunFired == true){
				jQuery("#btn-gun-"+eventId).hide();
				//jQuery("#btn-done-"+eventId).show();
			}
			runningEventCount++;
		}
		getReaderResults();
		});
	request.fail(function( jqXHR, textStatus ) {
		// error?
		});
}

function getReaders(){
	var request = jQuery.ajax({
		url: "/bibs-server/timers",
		type: "GET",
		dataType: "json"
		});
	request.done(function( data ) {
		var n = 1;
		for(var i in data){
			makeReaderRow(n++,data[i]);
			timerStatus(data[i].id);
		}
		});
	request.fail(function( jqXHR, textStatus ) {
		// error?
		});
}
function refreshMetrics(eventId){
	var total = jQuery.ajax({
		url: "/bibs-server/events/count?event="+eventId,
		type: "GET",
		dataType: "html"
		});
	total.done(function(data){
		jQuery(".total-"+eventId).html(data);
	});
	var started = jQuery.ajax({
		url: "/bibs-server/events/countstarted?event="+eventId,
		type: "GET",
		dataType: "html"
		});
	started.done(function( data ) {
		jQuery("#start-"+eventId).html(data);
	});
	var finished = jQuery.ajax({
		url: "/bibs-server/events/countcomplete?event="+eventId,
		type: "GET",
		dataType: "html"
		});
	finished.done(function( data ) {
		jQuery("#done-"+eventId).html(data);
	});
}

</script>

</div>
