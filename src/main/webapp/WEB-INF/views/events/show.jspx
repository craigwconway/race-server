<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<div xmlns:field="urn:jsptagdir:/WEB-INF/tags/form/fields" xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:fn="http://java.sun.com/jsp/jstl/functions" xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:page="urn:jsptagdir:/WEB-INF/tags/form" xmlns:sec="http://www.springframework.org/security/tags" xmlns:spring="http://www.springframework.org/tags" version="2.0" xmlns:fmt="http://java.sun.com/jsp/jstl/fmt">
    <jsp:directive.page contentType="text/html;charset=UTF-8"/>
    <jsp:output omit-xml-declaration="yes"/>
    <link href='/bibs-server/resources/styles/events_show.css' rel='stylesheet' />
    <link href='https://api.tiles.mapbox.com/mapbox.js/v2.1.9/mapbox.css' rel='stylesheet' />
    <page id="ps_com_bibsmobile_model_Event" object="${event}" path="/events" z="SUWZZpErB/yTE/5ml2JyarhiIek=">
    <div class="ui small modal" id="regButtonModal" style="display:none">
        <div class="header">Registration Button Snippet</div>
        <div class="content">
            <div class="preview">Preview: 
                <button style="padding: 10px 10px 10px 36px; background: #ffffff url(https://s3.amazonaws.com/galen-shennanigans/bibsIcon16x16.png) 10px 10px no-repeat; border-radius: 12px; border: 1px solid #d9d9d9;">Register</button>
            </div>
            Embed the code below to generate a bibs registration button:<br/>
            <c:set var="reghtml" value='&lt;form action="${build.frontend}/registration/#/${event.id}" method="get"&gt;&lt;button style="padding: 10px 10px 10px 36px; background: #ffffff url(https://s3.amazonaws.com/galen-shennanigans/bibsIcon16x16.png) 10px 10px no-repeat; border-radius: 12px; border: 1px solid #d9d9d9;"&gt;Register&lt;/button&gt;&lt;/form&gt;'/>
            <pre>${fn:escapeXml(reghtml)}</pre>
            Link: <br/> <a href="${build.frontend}/registration/#/${event.id}">${build.frontend}/registration/#/${event.id}</a>
        </div>
        <div class="actions">
            <div class="ui button" onclick="closeModal()">Close</div>
        </div>
    </div>

    <div class="ui long modal" id="liveResults" style="display:none">
        <div class="header">Live Results Snippet</div>
        <div class="content">
            Copy the url below to share live results:<br/>
            <c:set var="livehead" value='&lt;a href="${build.frontend}/webapp/#/raceday/ug/'/>
            <c:set var="livetail" value='/t/1/events"&gt;&lt;/a&gt;'/>
            <pre>${fn:escapeXml(livehead)}<span id="liveid"><!--  --></span>${fn:escapeXml(livetail)}</pre>
        </div>
        <div class="actions">
            <div class="ui button" onclick="closeModal()">Close</div>
        </div>
    </div>

    <div class="ui long modal" id="waiverModal" style="display:none">
        <div class="header">Waiver</div>
        <div class="content">
            <textarea class="waiver-content" name="waiver">Paste your waiver here.</textarea>
        </div>
        <div class="actions">
            <div class="ui button" onclick="closeModal()">Cancel</div>
            <div class="ui green button post-waiver-button" onclick="postWaiver()">Save</div>
        </div>
    </div>

    <div class="ui long modal" id="emailModal" style="display:none">
        <div class="header">Email</div>
        <div class="content">
            <div class="ui negative message" id="emailError" style="display:none">
                <i class="fa fa-times close" style="float:right"><!--  --></i>
                <div class="header">Error</div>
                <p><!--  --></p>
            </div>
            <div class="ui form" id="emailForm">
                <div class="field">
                    <label>Email by event type</label>
                    <div class="ui fluid selection dropdown" id="event-type">
                        <input type="hidden" name="type"><!--  --></input>
                        <i class="fa fa-caret-down" style="float:right"><!--  --></i>
                        <div class="default text">Event Type (optional)</div>
                        <div class="menu">
                            <c:forEach var="item" items="${eventTypes}">
                                <div class="item" data-value="${item.id}">${item.typeName}</div>
                            </c:forEach>
                        </div>
                    </div>
                </div>
                <div class="required field">
                    <label>Subject</label>
                    <input name="subject" placeholder="Subject"></input>
                </div>
                <div class="required field">
                    <label>Body</label>
                    <textarea name="body"><!--  --></textarea>
                </div>
            </div>
        </div>
        <div class="actions">
            <div class="ui button" onclick="closeModal()">Cancel</div>
            <div class="ui green button post-email-button" onclick="sendEmail()">Send</div>
        </div>
    </div>

    <div class="ui small modal" id="bibsModal" style="display:none">
        <div class="header">Manage Bib Numbers</div>
        <div class="content">
            <div class="ui info small message">
                <i class="fa fa-close link right-icon"><!--  --></i>
                <div class="header"><!--  --></div>
                <ul class="list">
                    <li>This feature will overwrite currently assigned bib numbers.</li>
                    <li>To manually assign bib numbers, please do so via <strong>Export Registrations</strong> under the Registration tab.</li>
                </ul>
            </div>
            <div class="ui small negative message" id="bibsError" style="display:none">
                <i class="fa fa-times close" style="float:right"><!--  --></i>
                <div class="header">Error</div>
                <p><!--  --></p>
            </div>
            <form class="ui form" id="bibsForm">
                <div class="required eight wide field">
                    <label>Select Event Type</label>
                    <div class="ui fluid selection dropdown" id="event-type">
                        <input type="hidden" name="type"><!--  --></input>
                        <i class="fa fa-caret-down" style="float:right"><!--  --></i>
                        <div class="default text">Event Type</div>
                        <div class="menu">
                            <c:forEach var="item" items="${eventTypes}">
                                <div class="item" data-value="${item.id}">${item.typeName}</div>
                            </c:forEach>
                        </div>
                    </div>
                </div>
                <label>Bib Ranges (optional)</label>
                <div class="two fields">
                    <div style="clear:both"><!--  --></div>
                    <div class="four wide field" style="padding-left:0">
                        <label>Lowest Bib Number</label>
                        <input class="form-control" type="number" min="1" id="lowbib" name="lowbib"></input>
                    </div>
                    <div class="four wide field">
                        <label>Highest Bib Number</label>
                        <input class="form-control" type="number" min="2" id="highbib" name="highbib"><!--  --></input>
                    </div>
                </div>
            </form>
        </div>
        <div class="actions">
            <div class="ui button" onclick="closeModal()">Cancel</div>
            <div class="ui red button post-bibs-button" onclick="assignBibs()">Overwrite Bib Numbers</div>
        </div>
    </div>

    <div class="ui small modal" id="exportRegModal" style="display:none">
        <div class="header">Export Registration</div>
        <div class="content">
            <style>.ui.three.cards > .card:nth-child(3n+1){ clear:none; }
                .ui.three.cards{ outline: none; border: none; margin: 0 auto; width: 75%; text-align: center; }
                .ui.cards > .card > .content, .ui.card > .content:hover{ cursor: pointer; }
            </style>
            <div class="ui three cards" id="ticket-type">
                <div class="ui card" id="card-ticket" onclick="setExportRegType('TICKET')">
                    <div class="content">
                        <div class="ui yellow header"><i class="fa fa-ticket"><!--  --></i><br/>Ticket</div>
                    </div>
                </div>
                <div class="ui card" id="card-tshirt" onclick="setExportRegType('T_SHIRT')">
                    <div class="content">
                        <div class="ui teal header"><i class="fa fa-shirtsinbulk"><!--  --></i><br/>T-shirt</div>
                    </div>
                </div>
                <div class="ui card" id="card-donation" onclick="setExportRegType('DONATION')">
                    <div class="content">
                        <div class="ui blue header"><i class="fa fa-heart-o"><!--  --></i><br/>Donation</div>
                    </div>
                </div>
            </div>
            <div style="width:400px;margin:0 auto;">
                <div class="ui slider checkbox">
                    <input type="checkbox" name="questions"></input>
                    <label style="width:100%;">Include custom questions?</label>
                </div>
                <div style="clear:both"><!--   --></div>
                <div class="ui slider checkbox">
                    <input type="checkbox" name="bibnum"></input>
                    <label style="width:100%;">Include bib numbers?</label>
                </div>
            </div>
        </div>
        <div class="actions">
            <div class="ui red button" style="float:left" onclick="closeModal()">Cancel</div>
			<div class="ui bibs-bg-main-yellow bibs-gray-4 button" onclick="exportRegHandler(true, true)">
                <i class="fa fa-star-o left-icon"><!--  --></i> Quick
            </div>
            <button class="ui bibs-bg-main-blue bibs-gray-2 button" onclick="exportRegHandler(false, false)">
                <i class="fa fa-refresh left-icon"><!--  --></i> New Data Only
            </button>
            <button class="ui bibs-bg-main-navy bibs-gray-2 button" onclick="exportRegHandler(true, false)">
                <i class="fa fa-files-o left-icon"><!--  --></i> All Data
            </button>
        </div>
    </div>

    <div class="ui small modal" id="exportAthletesModal" style="display:none">
        <div class="header">Export Athletes</div>
        <div class="content">
            <h4 class="ui header">Export by Event Type (optional)</h4>
            <div class="row">
                <div class="ui selection dropdown" id="exportAthletes-eventTypes">
                    <input type="hidden" name="type"><!--  --></input>
                    <i class="fa fa-caret-down" style="float:right"><!--  --></i>
                    <div class="default text">Event Type (optional)</div>
                    <div class="menu">
                        <c:forEach var="item" items="${eventTypes}">
                            <div class="item" data-value="${item.id}">${item.typeName}</div>
                        </c:forEach>
                    </div>
                </div>
            </div>
            <div class="row">
                <div style="font-size: 0.9em;color:#808080">Default: Export all athletes</div>
            </div>
        </div>
        <div class="actions">
            <div class="ui button" onclick="closeModal()">Cancel</div>
            <button class="ui primary button" style="width:150px" onclick="exportAthletesHandler()">
                <i class="fa fa-files-o icon"><!--  --></i>Export
            </button>
        </div>
    </div>

    <div class="ui small modal" id="importAthletesModal" style="display:none">
        <div class="header">Import Athletes</div>
        <div class="content">
            <h4 class="ui header">Choose Event Type</h4>
            <div class="row">
                <div class="ui selection dropdown" id="importAthletes-eventTypes">
                    <input type="hidden" name="type"><!--  --></input>
                    <i class="fa fa-caret-down" style="float:right"><!--  --></i>
                    <div class="default text">Event Type</div>
                    <div class="menu">
                        <c:forEach var="item" items="${eventTypes}">
                            <div class="item" data-value="${item.id}">${item.typeName}</div>
                        </c:forEach>
                    </div>
                </div>
            </div>
            <div class="row">
                <div style="font-size: 0.9em;color:#808080">Pick an event type to proceed</div>
            </div>
        </div>
        <div class="actions">
            <div class="ui button" onclick="closeModal()">Cancel</div>
            <button class="ui primary button" style="width:150px" onclick="importAthletesHandler()">
                <i class="fa fa-files-o icon"><!--  --></i>Import
            </button>
        </div>
    </div>

    <div class="ui long modal" id="addType">
        <div class="header">Manage Event Type</div>
        <c:if test="${empty eventTypes}">
            <div class="ui bibs-bg-main-yellow bibs-gray-4 segment">
                <i class="fa fa-close link right-icon"><!--  --></i>
                <i class="fa fa-bell left-icon"><!--  --></i>
                You've created your event! You can now add your first Event Type!
            </div>
        </c:if>
        <div class="content">
            <div class="ui three top attached steps" id="etype-tab-control">
                <a class="active step" data-tab="log">
                    <i class="fa fa-wrench fa-2x"><!--  --></i>
                    <div class="content">
                        <div class="title">Logistics</div>
                        <div class="description">Change Event Type name, distance, and more.</div>
                    </div>
                </a>
                <a class="step" data-tab="bib">
                    <i class="fa fa-flag fa-2x"><!--  --></i>
                    <div class="content">
                        <div class="title">Bib Settings</div>
                        <div class="description">Assign bib numbers.</div>
                    </div>
                </a>
                <a class="step" data-tab="reg">
                    <i class="fa fa-ticket fa-2x"><!--  --></i>
                    <div class="content">
                        <div class="title">Registration Options</div>
                        <div class="description">Set ticket prices, registration window, and more.</div>
                    </div>
                </a>
            </div>
            <div class="ui attached segment">
                <form class="ui form" id="etypeForm">
                    <div class="tab-log">
                        <h3 class="ui dividing header">Logistics</h3>
                        <div class="fields tab-log">
                            <div class="four wide required field">
                                <label id="racetypes">Race Types</label>
                                <div class="ui fluid search selection dropdown" id="racetype-dropdown">
                                    <input type="hidden" name="raceType"/>
                                    <i class="fa fa-caret-down right-icon"><!--  --></i>
                                    <div class="default text">Select Race Type</div>
                                    <div class="menu">
                                        <div class="item" data-value="Running">Running</div>
                                        <div class="item" data-value="Swimming">Swimming</div>
                                        <div class="item" data-value="Cycling">Cycling</div>
                                        <div class="item" data-value="Mountain Biking">Mountain Biking</div>
                                        <div class="item" data-value="Trail Run">Trail Run</div>
                                        <div class="item" data-value="Mud Run">Mud Run</div>
                                        <div class="item" data-value="Track and Field">Track and Field</div>
                                        <div class="item" data-value="Triathlon">Triathlon</div>
                                        <div class="item" data-value="Duathlon">Duathlon</div>
                                        <div class="item" data-value="Ironman">Ironman</div>
                                        <div class="item" data-value="Fun Run">Fun Run</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <label id="distance">Distance</label>	
                        <div class="fields" style="position:relative">
                            <div class="four wide required field" style="padding-right:0">
                                <div class="ui fluid search selection dropdown" id="distance-dropdown">
                                    <input type="hidden" name="dist"/>
                                    <i class="fa fa-caret-down right-icon"><!--  --></i>
                                    <div class="default text">Preset Distance</div>
                                    <div class="menu">
                                    	<div class="item" data-value="N/A">N/A</div>
                                        <div class="item" data-value="5k">5k</div>
                                        <div class="item" data-value="8k">8k</div>
                                        <div class="item" data-value="10k">10k</div>
                                        <div class="item" data-value="12k">12k</div>
                                        <div class="item" data-value="15k">15k</div>
                                        <div class="item" data-value="Half Marathon">Half Marathon</div>
                                        <div class="item" data-value="Marathon">Marathon</div>
                                        <div class="item" data-value="Sprint">Spring</div>
                                        <div class="item" data-value="Olympic">Olympic</div>
                                        <div class="item" data-value="Half">Half (Triathlon)</div>
                                        <div class="item" data-value="Full">Full (Triathlon)</div>
                                        <div class="item" data-value="Custom">Custom</div>
                                    </div>
                                </div>
        					</div>
        					<div class="one wide inline required field">
            					<div class="ui vertical divider" style="height: 25%;left: 28%;top: 38%;">or</div>
        					</div>
        					<div class="ten wide inline required field">
                                <input type="number" name="distance" placeholder="Distance" min="0" step="0.1" style="width: 100px" />
                                <div class="ui icon buttons" style="margin-left:10px">
                                    <div class="ui positive button dist-btn" id="dist-mi"><b>miles</b></div>
                                    <div class="ui button dist-btn" id="dist-km"><b>kilometers</b></div>
                                    <div class="ui button dist-btn" id="dist-m"><b>meters</b></div>
                                </div>
                            </div>
                        </div>
                        <div class="fields">
                            <div class="four wide required field">
                                <label id="starttime">Start Time</label>
                                <div class="ui action input">
                                    <input  type="text" name="timeStartLocal"
                                            class="form-control"
                                            id="timedisp"
                                            placeholder="Official Time (hh:mm)"
                                            data-provide="datepicker"
                                            data-date-format="h:mm a"
                                            data-parsley-error-message="Invalid time format. (hh:mm required)"></input>
                                    <div class="ui icon button" id="removetime"><span class="fa fa-close"></span></div>
                                </div>
                            </div>
                        </div>
                        <label style="width:100%">Event Type Name</label>
                        <div class="fields">
                            <div class="seven wide field">
                                <input type="text" name="typeName" placeholder="Event Type Name"><!--  --></input>
                            </div>
                            <div class="ui left pointing label" style="line-height:2em;">
                                We can set this automatically for you if you don't name it.
                            </div>
                        </div>
                    </div>
                    <div class="tab-bib" style="display:none">
                        <h3 class="ui dividing header">Bib Settings</h3>
                        <label style="width:100%">Assign Bib Ranges (optional)</label>
                        <div class="ui info message">
                            <div class="header"><i class="fa fa-bell left-icon"><!--  --></i><i class="fa fa-close link right-icon"><!--  --></i> What are bib ranges?</div>
                            You can choose to allocate bib numbers automatically. If using registration, you will be able to download athlete data with the numbers already assigned for easy insertion into a local database for less stress on raceday!
                        </div>
                        <div class="two fields post-event-type">
                            <div style="clear:both"><!--  --></div>
                            <div class="four wide field" style="padding-left:0">
                                <label>Lowest Bib Number</label>
                                <input class="form-control" type="number" min="1" id="etype-lowbib" name="lowbib"><!--  --></input>
                            </div>
                            <div class="four wide field">
                                <label>Highest Bib Number</label>
                                <input class="form-control" type="number" min="2" id="etype-highbib" name="highbib"><!--  --></input>
                            </div>
                        </div>
                    </div>
                    <div class="tab-reg" style="display:none">
                        <h3 class="ui dividing header">Registration Details</h3>
                        <div class="ui toggle checkbox" id="toggleRegistration" style="width:100%">
                            <input type="checkbox"/>
                            <label style="width: 100%">Set up ticket sale &amp; registration for this event type</label>
                        </div>
                        <div class="four wide required field">
                            <label style="width:100%">Price</label>
                            <div class="ui labeled input">
                                <div class="ui label">$</div>
                                <input  type="number" name="price"
                                        placeholder="Base price"
                                        min="0"
                                        data-parsley-error-message="Invalid base price."
                                        data-parsley-required="true"></input>
                            </div>
                        </div>
                        <div class="four wide field">
                            <label style="width:100%">Max Participant Count</label>
                            <input  type="number" name="available"
                                    placeholder="Max # of Participants"
                                    min="1"
                                    data-parsley-error-message="Invalid maximum number."
                                    data-parsley-required="true"></input>
                        </div>
                        <label style="width:100%">Registration Window</label>
                        <div class="two fields">
                            <div class="four wide required field">
                                <label>Open Date: </label>
                                <input  type="text" name="timeStartLocal"
                                        id="ECIStart"
                                        placeholder="Price start date"
                                        data-provide="datepicker"
                                        data-date-format="MM/DD/YYYY hh:mm:ss a"
                                        data-parsley-error-message="Please specify a start date."
                                        data-parsley-required="true"></input>
                            </div>
                            <div class="four wide required field">
                                <label>Close Date: </label>
                                <input  type="text" name="timeEndLocal"
                                        id="ECIEnd"
                                        placeholder="Price end date"
                                        data-provide="datepicker"
                                        data-date-format="MM/DD/YYYY hh:mm:ss a"
                                        data-parsley-error-message="Please specify an end date."
                                        data-parsley-required="true"></input>
                            <div class="ui pointing label">
    								Must end before your event starts
    						</div>
                            </div>

                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="actions">
            <div class="ui button" onclick="closeModal()">Cancel</div>
            <div class="ui green submit button post-event-type" onclick="saveEventType(false)">Submit</div>
            <div class="ui red button put-event-type" style="display:none" onclick="saveEventType(null)">Remove</div>
            <div class="ui green submit button put-event-type" style="display:none" onclick="saveEventType(true)">Save</div>
        </div>
    </div>
    
    <div class="bibs-page bibs-bg-gray-1">
        <div class="ui very padded basic segment">
        <jsp:useBean id="now" class="java.util.Date"/>
        <fmt:parseDate value="${event.timeStartLocal}" pattern="MM/dd/yyyy hh:mm:ss a" var="eventDate"/>
        <c:choose>
            <c:when test="${eventDate le now}">
                <div class="ui bibs-bg-main-yellow bibs-gray-4 segment">
                    <i class="fa fa-bell left-icon"><!--  --></i>
                    <i class="fa fa-close link right-icon"><!--  --></i>
                    Congratulations on completing your event! You can now manage your race results, awards, athletes, and more.
                </div>
            </c:when>
            <c:when test="${empty eventTypes}">
                <div class="ui bibs-bg-main-yellow bibs-gray-4 segment">
                    <i class="fa fa-bell left-icon"><!--  --></i>
                    <i class="fa fa-close link right-icon"><!--  --></i>
                    You've created your event! You can now <a onclick="renderModal('eventType')" class="emphasized emphasized-link">add your first Event Type</a>!
                </div>
            </c:when>
            <c:otherwise>
                <div class="ui bibs-bg-main-yellow bibs-gray-4 segment">
                    <i class="fa fa-bell left-icon"><!--  --></i>
                    <i class="fa fa-close link right-icon"><!--  --></i>
                    You've created your Event Type! Please don't forget to <a href="/bibs-server/eventitems?event=2" class="emphasized emphasized-link">set-up registration</a> and additional event details.
                </div>
            </c:otherwise>
        </c:choose>
        <div class="ui labeled icon bibs-bg-black menu">
            <sec:authorize access="hasAnyRole('ROLE_EVENT_ADMIN,ROLE_SYS_ADMIN')">
            <c:if test='${(eventadmin)}'>
                <c:if test='${(build.registration)}'>
                <a class="item bibs-gray-1" href="#" onclick="redirectReport();return false;">
                    <i class="fa fa-line-chart icon"><!--  --></i> Reports
                </a>
                </c:if>
                <a class="item bibs-gray-1" href="#" onclick="redirectAthletes();return false;">
                    <i class="fa fa-users icon"><!--  --></i> Athletes
                </a>
                <a class="item bibs-gray-1" href="#" onclick="redirectLive();return false;">
                    <i class="fa fa-refresh icon"><!--  --></i> Live
                </a>
            </c:if>
            </sec:authorize>
            <a class="item bibs-gray-1" href="#" onclick="redirectAwards();return false;">
                <i class="fa fa-trophy icon"><!--  --></i> Awards
            </a>
            <sec:authorize access="hasAnyRole('ROLE_EVENT_ADMIN,ROLE_SYS_ADMIN')">
            <div class="right menu">
                <c:if test='${(build.registration)}'>
                    <div class="ui simple dropdown item bibs-gray-1 .main-menu-dropdown">
                        <i class="fa fa-check-square-o icon"><!--  --></i> Registration
                        <i class="fa fa-caret-down"><!--  --></i>
                        <div class="menu">
                            <c:if test='${(eventadmin) &amp;&amp; (!event.regEnabled)}'>
                                <a class="item" href="#" onclick="redirectEnableReg(); return false;">Open Registration</a>
                            </c:if>
                            <c:if test='${(eventadmin) &amp;&amp; (event.regEnabled)}'>
                                <a class="item" href="#" onclick="redirectDisableReg(); return false;">Close Registration</a>
                                <a class="item" href="#" onclick="redirectManageReg(); return false;">Registration Tools</a>
                                <a class="item" href="#" onclick="redirectSearchReg(); return false;">Search Registrations</a>
                                <a class="item" href="#" onclick="renderModal('exportReg')">Export Registrations</a>
                                <div class="divider"><!--  --></div>
                            </c:if>
                            <c:if test="${not empty eventTypes}">
                                <a class="item" href="#" onclick="renderModal('bibs')">Assign Bib Numbers</a>
                                <div class="divider"><!--  --></div>
                            </c:if>
                            <sec:authorize access="hasAnyRole('ROLE_EVENT_ADMIN,ROLE_SYS_ADMIN')">
                            <c:if test='${(event.regEnabled)}'>
                                <a class="item" href="#" onclick="renderModal('email')">Send Email Announcement</a>
                                <div class="divider"><!--  --></div>
                            </c:if>
                            </sec:authorize>
                            <a class="item" href="#" onclick="renderModal('regButton');return false;">Registration URL/Link</a>
                            <a class="item" href="#" onclick="renderModal('waiver')">Waiver</a>
                        </div>
                    </div>
                </c:if>
                <div class="ui simple dropdown item bibs-gray-1 .main-menu-dropdown">
                    <i class="fa fa-file-text icon"><!--  --></i> Results
                    <i class="fa fa-caret-down"><!--  --></i>
                    <div class="menu">
                        <a class="item" href="#" onclick="renderModal('importAthletes')">Import</a>
                        <a class="item" href="#" onclick="redirectDropboxImport();return false;">Import from Dropbox</a>
                        <c:if test="${dropboxUnlink == true}">
                            <a class="item" href="#" onclick="redirectDropboxDeauth();return false;">Unlink Dropbox Account</a>
                        </c:if>
                        <a class="disabled item" href="#">Import bibs file</a>
                        <div class="divider"><!--  --></div>
                        <a class="item" href="#" onclick="renderModal('exportAthletes')">Export</a>
                        <a class="item" href="#" onclick="cloud();return false;">Cloud Sync</a>
                        <c:if test="${lastImport != null}">
                            <a href="#" onclick="redirectChangeFileMapping();return false;">Change file mapping</a>
                        </c:if>
                        <a class="item" href="#" onclick="redirectBackup();return false;">Export bibs file</a>
                        <div class="divider show-live"><!--   --></div>
                        <a class="item show-live" onclick="liveUrl();return false;">Live Results Link</a>
                    </div>
                </div>
            </div>
            </sec:authorize>
        </div>
        <div class="ui grid">
            <div class="row">
                <div class="left floated eleven wide column">
                <c:if test='${(build.registration)}'>
                    <div class="map-container">
                        <div id="map"><!--  --></div>
                        <div class="map-canvas-warning"><small>If you can't see the map, please check your event settings!</small></div>
                    </div>
                </c:if>
                <c:if test='${(!build.registration)}'>
                <div class="map-container"><!--  --></div>
                </c:if>
                <div class="event-info-box">
                    <div class="event-name">${event.name}</div>
                    <div class="event-location">${event.city}, ${event.state}</div>
                    <div id="event-time"><fmt:formatDate type="date" value="${eventDate}" />
                     <!-- first start <fmt:formatDate type="time" value="${eventDate}" /> -->
                     </div>
                </div>
                </div>
                <div class="right floated four wide column">
                <div class="button-container">
                    <c:if test='${(build.registration)}'>
                        <div class="ui vertical labeled icon basic buttons">
                            <button class="ui button"
                                    onclick="editForm()">
                                <i class="fa fa-edit bibs-orange icon"><!--  --></i>
                                Edit Event Details
                            </button>
                            <button class="ui button"
                                    onclick="deleteEvent()">
                                <i class="fa fa-trash bibs-red icon"><!--  --></i>
                                Delete Event
                            </button>
                        <c:if test='${event.regEnabled}'>
                            <button class="ui active button"
                                    onclick="redirectDisableReg()">
                                <i  class="fa fa-check icon bibs-green"><!--   --></i>
                                Registration is open
                            </button>
                        </c:if>
                        <c:if test='${(!event.regEnabled)}'>
                            <button class="ui button"
                                    onclick="redirectEnableReg()">
                                <i  class="fa fa-ban icon"><!--   --></i>
                                Registration is closed
                            </button>
                        </c:if>
                        <c:if test='${(event.live)}'>
                            <button class="ui active button"
                                    onclick="redirectDisableLive()">
                                <i  class="fa fa-unlock icon bibs-green"><!--   --></i>
                                Listing is public
                            </button>
                        </c:if>
                        <c:if test='${(!event.live)}'>
                            <button class="ui button"
                                    onclick="redirectEnableLive()">
                                <i  class="fa fa-lock icon"><!--   --></i>
                                Listing is private
                            </button>
                        </c:if>
                        <c:if test='${(event.sync)}'>
                            <button class="ui active button"
                                    onclick="redirectDisableSync()">
                                <i  class="fa fa-cloud icon bibs-green"><!--   --></i>
                                Cloud sync enabled
                            </button>
                        </c:if>
                        <c:if test='${(!event.sync)}'>
                            <button class="ui button"
                                    onclick="redirectEnableSync()">
                                <i  class="fa fa-ban icon"><!--   --></i>
                                Cloud sync disabled
                            </button>
                        </c:if>
                        <c:if test="${not empty eventTypes}">
                            <button class="ui bibs-bg-main-teal bibs-gray-1 button"
                                    onclick="redirectManageReg()">
                                <i  class="fa fa-wrench icon"><!--  --></i>
                                Registration Tools
                            </button>
                        </c:if>
                        </div>
                    </c:if>
                </div>
                </div>
            </div>
            <sec:authorize access="hasAnyRole('ROLE_EVENT_ADMIN,ROLE_SYS_ADMIN')">
            <div class="row">
                <div class="button-container" style="margin-top:-2rem;margin-left:1rem;">
                    <button class="ui basic black button" onClick="renderModal('eventType')"><i class="fa fa-plus" style="margin-right:5px"><!--  --></i>event type</button>
                </div>
            </div>
            <div class="row">
                <div class="column">
                <c:if test="${not empty eventTypes}">
                    <h3 class="ui header event-type-header">events taking place on <fmt:formatDate type="date" value="${eventDate}" /></h3>
                    <table class="ui compact stackable table">
                        <thead><tr>
                            <th>Name</th>
                            <th>Type</th>
                            <th>Distance</th>
                            <th>Start Time</th>
                            <th>Registration</th>
                            <th># Registered</th>
                            <th># Athletes</th>
                        </tr></thead>
                        <tbody>
                            <c:forEach var="item" items="${metatype}">
                                <c:if test="${item.ticket != null }">
                                    <tr class="eventtype-item" onclick="redirectTicket(${item.ticket.id})">    
                                        <td>${item.type.typeName}</td>
                                        <td>${item.type.racetype}</td>
                                        <td>${item.type.distance}</td>
                                        <td>${item.type.timeStartLocal}</td>
                                        <td><div class="ui small button" onclick="redirectEventTypeDetail('${item.type.id}')">Detail</div></td>
                                        <td>${item.ticket.purchased }</td>
                                        <td>${item.athletes }</td>
                                    </tr>
                                </c:if>
                                <c:if test="${item.ticket == null }">
                                    <tr class="eventtype-item" onclick="editEventType('${item.type.typeName}', '${item.type.racetype}', '${item.type.distance}', '${item.type.timeStartLocal}', '${item.type.id}', null, null, null, null, null)">
                                        <td>${item.type.typeName}</td>
                                        <td>${item.type.racetype}</td>
                                        <td>${item.type.distance}</td>
                                        <td>${item.type.timeStartLocal}</td>
                                        <td><div class="ui small button" onclick="editEventType('${item.type.typeName}', '${item.type.racetype}', '${item.type.distance}', '${item.type.timeStartLocal}', '${item.type.id}', null, null, null, null, null)">Enable</div></td>
                                        <td>N/A</td>
                                        <td>${item.athletes }</td>
                                    </tr>
                                </c:if>
                            </c:forEach>
                        </tbody>
                    </table>
                </c:if>
                <c:if test="${lastImport != null}">
                    <field:display date="true" dateTimePattern="${event_timestart_date_format}" field="runDate" id="s_com_bibsmobile_model_ResultsImport_runDate" object="${lastImport}" z="user-managed" label="Last import time"/>
                    <field:display field="errors" id="s_com_bibsmobile_model_ResultsImport_errors" object="${lastImport}" z="user-managed" label="Errors in last import"/>
                </c:if>
                </div>
            </div>
            </sec:authorize>
        </div>
        </div>
    </div>
</page>
<script>
    var saveType = 'eventTypes';
    window.onload = init;

    function init(){
        <c:if test="${empty eventTypes}">
            renderEventTypeModal('clean');
        </c:if>

        jQuery('i.link.fa.fa-close').off().on('click', function() {
            jQuery(this).closest('.segment').transition('fade');
        });

        jQuery('.main-menu-dropdown').dropdown();

        initInfo();
        <c:if test='${(!build.rfid)}'>
            initMap();
        </c:if>
    }

    function renderModal(type){
        if(type !== 'eventType'){
            jQuery('#'+type+'Modal').modal('show');
            if(type == 'exportReg'){
                jQuery('#'+type+'Modal').find('.ui.checkbox').checkbox();
            }
        }else{
            renderEventTypeModal('clean');
        }

        jQuery('i.link.fa.fa-close').off().on('click', function() {
            jQuery(this).closest('.segment,.message').transition('fade');
        });
    }

    function renderEventTypeModal(type){
        jQuery('#addType').modal({
            autofocus: false,
            onShow: function(){
                jQuery("#etypeForm .field > .selection.dropdown").dropdown();

                jQuery("#removetime").click(function(){
                    jQuery("#timedisp").data('DateTimePicker').setDate(moment('${event.timeStartLocal}', 'MM/DD/YYYY hh:mm:ss a').startOf('hour'));
                });

                jQuery('.tab-reg > .field, .tab-reg > .fields').addClass('disabled');
                jQuery('.tab-reg > .ui.checkbox').checkbox({
                    onChecked: function(){
                        console.log('checked')
                        jQuery('.tab-reg > .field, .tab-reg > .fields').removeClass('disabled');
                        saveType = 'ticket';
                    },
                    onUnchecked: function(){
                        console.log('unchecked')
                        jQuery('.tab-reg > .field, .tab-reg > .fields').addClass('disabled');
                        saveType = 'eventTypes';
                    }
                });

                jQuery('#etype-tab-control > .step').each(function(i,n){
                    var stepDOM = jQuery(n);
                    stepDOM.bind('click', function(ev){
                        var currStep = jQuery(stepDOM).data('tab');
                        if(currStep == 'bib'){
                            jQuery(stepDOM).addClass('active');
                            jQuery('#etype-tab-control > .step').not(stepDOM).removeClass('active');
                            jQuery('.tab-bib').show();
                            jQuery('.tab-log').hide();
                            jQuery('.tab-reg').hide();
                        }else if(currStep == 'log'){
                            jQuery(stepDOM).addClass('active');
                            jQuery('#etype-tab-control > .step').not(stepDOM).removeClass('active');
                            jQuery('.tab-log').show();
                            jQuery('.tab-bib').hide();
                            jQuery('.tab-reg').hide();
                        }else if(currStep == 'reg'){
                            jQuery(stepDOM).addClass('active');
                            jQuery('#etype-tab-control > .step').not(stepDOM).removeClass('active');
                            jQuery('.tab-reg').show();
                            jQuery('.tab-bib').hide();
                            jQuery('.tab-log').hide();
                        }
                    })
                });

                if(type == 'clean'){
                    jQuery(".post-event-type").show();
                    jQuery(".put-event-type").hide();
                    jQuery('#etypeForm input').val('');
                    jQuery('#racetype-dropdown').dropdown('clear');
                }
                else if(type == 'reg'){
                    jQuery('.tab-reg').show();
                    jQuery('.tab-log, .tab-bib').hide();
                    jQuery('#etype-tab-control > .step:last-child').addClass('active');
                    jQuery(".post-event-type").hide();
                    jQuery(".put-event-type").show();
                }
            }
        });
        jQuery('#addType').modal('show');
    }

    var distType;
    function initInfo(){
        localtime = eventStart.format('hh:mm:ss a');
        jQuery('#displayLocal').text(localtime);

        var momentRRTime = eventStart.startOf('hour');
        jQuery("#timedisp").datetimepicker({
            defaultDate: momentRRTime,
            pickDate: false
        });

        initDateTimePickers();

        jQuery('#lowbib').on('input', function(){
            var low = jQuery("#lowbib").val();
            var high = jQuery("#highbib").val();
            low = parseInt(low);
            high = parseInt(high);

            if( (low == "") || (low == 0) || (isNaN(low)) ){ jQuery("#lowbib").val(""); }
            if( high !== "" ){
                if( low &gt;= high ){
                    jQuery(this).val(high);
                }
                else{
                    jQuery("#highbib").attr("min", jQuery(this).val());
                }
            }
        });

        jQuery('#highbib').on('change', function(){
            var low = jQuery("#lowbib").val();
            var high = jQuery("#highbib").val();
            low = parseInt(low);
            high = parseInt(high);
            if( (high == "") || (high == 0) ){ jQuery("#highbib").val("") }
            if( low !== "" ){
                if( high &lt;= low ){
                    jQuery(this).val(low);
                }
                else{
                    jQuery("#lowbib").attr("max", jQuery(this).val());
                }
            }
        });

        jQuery('#etype-lowbib').on('input', function(){
            var low = jQuery("#etype-lowbib").val();
            var high = jQuery("#etype-highbib").val();
            low = parseInt(low);
            high = parseInt(high);

            if( (low == "") || (low == 0) || (isNaN(low)) ){ jQuery("#etype-lowbib").val(""); }
            if( high !== "" ){
                if( low &gt;= high ){
                    jQuery(this).val(high);
                }
                else{
                    jQuery("#etype-highbib").attr("min", jQuery(this).val());
                }
            }
        });

        jQuery('#etype-highbib').on('change', function(){
            var low = jQuery("#etype-lowbib").val();
            var high = jQuery("#etype-highbib").val();
            low = parseInt(low);
            high = parseInt(high);
            if( (high == "") || (high == 0) || (isNaN(low)) ){ jQuery("#etype-highbib").val("") }
            if( low !== "" ){
                if( high &lt;= low ){
                    jQuery(this).val(low);
                }
                else{
                    jQuery("#etype-lowbib").attr("max", jQuery(this).val());
                }
            }
        });

        jQuery('.dist-btn').each(function(){
            jQuery(this).click(function(){
                var id = jQuery(this).attr("id");
                jQuery(this).addClass('positive');
                jQuery(this).siblings().removeClass('positive');
                distType = id;
            })
        })

        jQuery('#exportAthletes-eventTypes').dropdown();
        jQuery('#importAthletes-eventTypes').dropdown();

        jQuery('.message .close').on('click', function() {
            jQuery(this).closest('.message').fadeOut();
        });
        jQuery(".ui.form .field > .selection.dropdown").dropdown();
        getWebappId();
        getWaiver();
    }

    function regDetails(){
    	if(jQuery('#reg-details-btn').text() === "Enable Registration Details") {
    		jQuery('#reg-details-btn').text("Disable Registration Details");
    	} else{
    		jQuery('#reg-details-btn').text("Enable Registration Details");
    		jQuery('input[name="price"]').val("");
            jQuery('input[name="available"]').val("");
    	}
        jQuery('#reg-details-container').toggle();
    }

    function saveEventType(put){
        var dat = {};
        var error = true;
		
        var eventTypeUrl = "/bibs-server/eventtypes/";
        var ajaxType = 'POST';

        //Check if we have valid ticket data
        var price = jQuery('input[name="price"]').val();
        var available = jQuery('input[name="available"]').val();
        var timeStartLocal = jQuery('input[name="timeStartLocal"]').val();
        var timeEndLocal = jQuery('input[name="timeEndLocal"]').val();
        if( (currEventCartItemId != null &amp;&amp; currEventCartItemId != "") 
        		|| (price != null &amp;&amp; price != "")
        		|| (available != null &amp;&amp; available != "")) {
        	saveType = "ticket";
        }
        
        var typeName  = jQuery('input[name="typeName"]').val();
        var distance  = jQuery('input[name="distance"]').val();
        var dropdownDistance = jQuery('#distance-dropdown').dropdown('get value');
        var distType  = null;
        if( jQuery('#dist-m').hasClass('positive')  ){ distType = ' m';  }
        if( jQuery('#dist-km').hasClass('positive') ){ distType = ' km'; }
        if( jQuery('#dist-mi').hasClass('positive') ){ distType = ' mi'; }
        var startTime = jQuery('input[name="timeStartLocal"]').val();
        var raceType  = jQuery('input[name="raceType"]').val();
        var lowbib = jQuery('#etype-lowbib').val();
        var highbib = jQuery('#etype-highbib').val();

        var parseDate = moment('${event.timeStartLocal}', 'MM/DD/YYYY h:mm:ss a');
        var hour   = moment(startTime, "h:mm a").hour();
        var minute = moment(startTime, "h:mm a").minute();

        parseDate.set('hour', hour);
        parseDate.set('minute', minute);
        parseDate = parseDate.format('MM/DD/YYYY hh:mm:ss a');

        if( (distance === "" &amp;&amp; dropdownDistance === "Custom") || (distance === "" &amp;&amp; dropdownDistance === "")  || (distance == "" &amp;&amp; dropdownDistance == "") || parseDate === "" || raceType === "" ){
            error = true;
            if( distance === "" ){
                jQuery('#distance').parent().addClass('error');
                jQuery('input[name="distance"]').on('keypress', function(){
                    if(jQuery('input[name="distance"]').val().length > 0){
                        jQuery('#distance').parent().removeClass('error');
                    }
                })
            }
            if( parseDate === "" ){
                jQuery('#starttime').parent().addClass('error');
                jQuery('input[name="timeStartLocal"]').on('keypress', function(){
                    if(jQuery('input[name="timeStartLocal"]').val().length > 0){
                        jQuery('#starttime').parent().removeClass('error');
                    }
                })
            }
            if( raceType === "" ){
                jQuery('#racetypes').parent().addClass('error');
                jQuery('input[name="raceType"]').on('change', function(){
                    if(jQuery('input[name="raceType"]').val().length > 0){
                        jQuery('#racetypes').parent().removeClass('error');
                    }
                })
            }
            console.log(error);
        }
        else{
        	if(saveType == "eventTypes") {	
                dat.event = {};
                dat.event.id = parseInt('${event.id}');

                if( put || put === null){
                    eventTypeUrl = "/bibs-server/eventtypes/" + currEventTypeId;
                    ajaxType = 'PUT';
                    if( put === null ){
                        dat.event = null;
                    }
                }
				console.log("[dropdownDistance: " + dropdownDistance + ", distance: " + distance + ",  distType: " + distType + "]");
                dat.typeName = typeName;
                if(dropdownDistance === "" || dropdownDistance === "Custom") {
                	dat.distance = distance + distType;
                } else {
                	dat.distance = dropdownDistance;
                }
                
                dat.timeStartLocal = parseDate;
                dat.racetype = raceType;
                if( lowbib  !== "" ){    dat.lowBib  = parseFloat(lowbib);     }
                if( highbib !== "" ){    dat.highBib = parseFloat(highbib);    }

                if(dat.timeStartLocal == ''){
                    jQuery('#starttime').next('.ui.input').addClass('error');
                    alert('Please enter a start time for this event type!');
                    return;
                }

                jQuery('.post-event-type').prop('disabled', true);
                if(!confirm('You have not enabled registration for this Event Type yet. Are you sure you want to continue?')){
                    return;
                }else{
                    jQuery.ajax({
                        url: eventTypeUrl,
                        type: ajaxType,
                        contentType: "application/json",
                        data: JSON.stringify(dat),
                        complete: function(data) {
                            window.location.reload();
                        }
                    })
                }
        	} else {
        		dat.event = {};
        		dat.event.id = parseInt('${event.id}');
        		dat.type = "TICKET";
        		dat.name = distance;
        		dat.price = price;
        		//dat.timeStartLocal = parseDate;
        		dat.timeStartLocal = jQuery('#ECIStart').val();
        		dat.timeEndLocal = timeEndLocal;
        		if (available == null || available == "") {
        			dat.available = new Number(10000000);
        		} else {
        			dat.available = new Number(available);
        		}
        		
        		var uploadUrl = "/bibs-server/eventitems/typeupdate"
        		var uploadMethod = "POST"
        			console.log("[dropdownDistance: " + dropdownDistance + ", distance: " + distance + ",  distType: " + distType + "]");
        		if(currEventCartItemId != null &amp;&amp; currEventCartItemId != "") {
        			dat.id = currEventCartItemId;
        			//uploadUrl = "/bibs-server/eventitems/ticketupdate"
        			//uploadMethod = "PUT"
        		}

                if( price == '' ){
                    if(confirm('You have not set a price for this registration ticket. Do you want this ticket to be free? If not, please set a price before proceeding.')){
                        dat.price = 0;
                    }else{
                        error = true;
                    }
                }

                if( dat.timeStartLocal == '' || dat.timeEndLocal == '' ){
                    if(confirm('You have not set a registration window for this ticket. Please set a registration window.')){

                    }
                }
        		
        		dat.eventType = {};
        		if(currEventTypeId != null &amp;&amp; currEventTypeId != "") {
        			dat.eventType.id = currEventTypeId;
        		}
 				dat.eventType.event = {};
        		dat.eventType.event.id = parseInt('${event.id}');
        		dat.eventType.typeName = typeName;
        		if(dropdownDistance === "" || dropdownDistance === "Custom") {
                	dat.eventType.distance = distance + distType;
                } else {
                	dat.eventType.distance = dropdownDistance;
                }
        		dat.eventType.timeStartLocal = parseDate;
        		dat.eventType.racetype = raceType;
                if( lowbib  !== "" ){    dat.eventType.lowBib  = parseFloat(lowbib);     }
                if( highbib !== "" ){    dat.eventType.highBib = parseFloat(highbib);    }
        		
                jQuery('.post-event-type').prop('disabled', true);
                jQuery.ajax({
                    url: uploadUrl,
                    type: uploadMethod,
                    contentType: "application/json",
                    data: JSON.stringify(dat),
                    dataType: "json",
                    complete: function(data) {
                    	console.log("ResponseData");
                    	console.log(data)
                    	if(data != null &amp;&amp; data.responseJSON) {
                    		console.log("/bibs-server/eventitems/" + data.responseJSON.status)
                    		console.log(window.location)
                    		jQuery('#addType').modal('hide');
                    		//window.location.href = "/bibs-server/eventitems/" + data.responseJSON.status
                    		redirectTicket(data.responseJSON.status);
                    	} else {
	                        window.location.reload();
                    	}
                    }
                })
        	}
        }
    }

    function sendEmail(){
        var subj  = jQuery('#emailForm input[name="subject"]').val();
        var body  = jQuery('#emailForm textarea[name="body"]').val();
        var etype = jQuery('#emailForm input[name="type"]').val();
        var ready = false;

        if( etype == "" || etype == null ){
            etype = "";
        }else{
            etype = '&amp;type=' + parseInt(etype);
        }
        if( subj.length &lt; 5 || body.length &lt; 5 ){
            jQuery('#emailError').show();
            jQuery('#emailError > p').text("Your subject and body are required fields and must be longer than 5 characters.");
            ready = false;
        }else{
            subj = encodeURIComponent(subj);
            ready = true;
        }
        
        if(ready){
            jQuery('.post-email-button').prop('disabled', true);
            var request = jQuery.ajax({
                url: '${event.id}/email?subject=' + subj + etype,
                type: 'POST',
                contentType: 'text/plain',
                data: body,
                complete: function(data) {
                    window.location.reload();
                }
            })   
            request.done(function( d ) {
                jQuery("#emailModal").modal('hide');
                alert("Your email has been sent!");
            });
            request.fail(function( jqXHR, textStatus ) {
            });
        }
    }

    function assignBibs(){
        var etype   = jQuery('#bibsForm input[name="type"]').val();
        var lowbib  = jQuery('#bibsForm input[name="lowbib"]').val();
        var highbib = jQuery('#bibsForm input[name="highbib"]').val();
        var ready = false;
        if( etype !== "" ){
            etype = parseInt(etype);
            if( lowbib == "" &amp;&amp; highbib == "" ){
                ready = true;
            }
            else if( lowbib !== "" &amp;&amp; highbib !== "" ){
                lowbib = parseInt(lowbib);
                highbib = parseInt(highbib);
                ready = true;
            }else{
                jQuery('#bibsError').show();
                jQuery('#bibsError > p').text("You must specify both the low and high values.");
            }
        }
        else{
            jQuery('#bibsError').show();
            jQuery('#bibsError > p').text("You must specify an event type.");
        }
        if( ready ){
            jQuery('#bibsError').hide();
            jQuery('.post-bibs-button').prop('disabled', true);
            var request = jQuery.ajax({
                url: '../eventtypes/associate/' + etype + '?lowbib=' + lowbib + '&amp;highbib=' + highbib + '&amp;force=true',
                type: 'POST',
                contentType: 'text/plain',
                complete: function(data) {
                    window.location.reload();
                }
            })   
            request.done(function( d ) {
                jQuery("#bibsModal").modal('hide');
            });
            request.fail(function( jqXHR, textStatus ) {
                /*  TODO    
                    add error message for ranged error return   */
            });
        }
    }

    var initModal = false;

    var currEventTypeId;
    var currEventCartItemId;
    function editEventType(typeName, type, dist, raceTime, id, ticketId, ticketAvail, ticketStart, ticketEnd, ticketPrice){
        renderEventTypeModal('reg');

        currEventTypeId = id;
        currEventCartItemId = ticketId;

		if(ticketId != null) {
			if(ticketAvail != null) jQuery('#etypeForm input[name="available"]').val(ticketAvail);
			jQuery('#etypeForm input[name="price"]').val(ticketPrice);
			jQuery('#etypeForm input[name="timeStartLocal"]').val(ticketStart);
			jQuery('#etypeForm input[name="timeEndLocal"]').val(ticketEnd);
		}
        jQuery('#etypeForm input[name="typeName"]').val(typeName);
        jQuery('#etypeForm input[name="raceType"]').val(type);
        jQuery('#racetype-dropdown').dropdown("set selected", type);
        
        //Start of racetype init
        jQuery('#dist-m').removeClass('positive');
        jQuery('#dist-mi').removeClass('positive');
        jQuery('#dist-km').removeClass('positive');
        switch(dist) {
            case "N/A":
            	jQuery('#distance-dropdown').dropdown('set selected', "N/A");
            	break;
            case "5k":
            	jQuery('#distance-dropdown').dropdown('set selected', "5k");
            	break;
            case "8k":
            	jQuery('#distance-dropdown').dropdown('set selected', "8k");
            	break;
            case "10k":
            	jQuery('#distance-dropdown').dropdown('set selected', "10k");
            	break;
            case "15k":
            	jQuery('#distance-dropdown').dropdown('set selected', "15k");
            	break;
            case "Half Marathon":
            	jQuery('#distance-dropdown').dropdown('set selected', "Half Marathon");
            	break;
            case "Marathon":
            	jQuery('#distance-dropdown').dropdown('set selected', "Marathon");
            	break;
            case "Sprint":
            	jQuery('#distance-dropdown').dropdown('set selected', "Sprint");
            	break;
            case "Olympic":
            	jQuery('#distance-dropdown').dropdown('set selected', "Olympic");
            	break;
            case "Half":
            	jQuery('#distance-dropdown').dropdown('set selected', "Half");
            	break;
            case "Full":
            	jQuery('#distance-dropdown').dropdown('set selected', "Full");
            	break;
            default:
            	jQuery('#distance-dropdown').dropdown('set selected', "Custom");
            	var parseDist = dist.split(' ');
            	jQuery('#etypeForm input[name="distance"]').val(parseDist[0]);
            	if( parseDist[1] === 'm' ){  jQuery('#dist-m').addClass('positive'); }
            	if( parseDist[1] === 'mi' ){ jQuery('#dist-mi').addClass('positive'); }
            	if( parseDist[1] === 'km' ){ jQuery('#dist-km').addClass('positive'); }
        }

        var raceTime = moment(raceTime);
        jQuery("#timedisp").data('DateTimePicker').setDate(raceTime);
        jQuery("#removetime").click(function(){
            jQuery("#timedisp").data('DateTimePicker').setDate(raceTime);
        });
    }

    function getWaiver(){
        var request = jQuery.ajax({
            url: '${event.waiver}',
            type: "GET",
            dataType: "text"
        });
        request.done(function( d ) {
            jQuery(".waiver-content").val(decodeURIComponent(d).replace(/\+/g, " "));
        });
        request.fail(function( jqXHR, textStatus ) {
        });
    }

    function postWaiver(){
        jQuery('.post-waiver-button').prop('disabled', true);
        var content = jQuery(".waiver-content").val();
        var request = jQuery.ajax({
            url: "/bibs-server/events/${event.id}/waiver",
            type: "POST",
            dataType: "text",
            data: content
        });
        request.done(function( d ) {
            jQuery("#waiverModal").modal('hide');
            window.location.reload();
        });
        request.fail(function( jqXHR, textStatus ) {
        });
    }

    function getWebappId(){
        var id = "";
        var request = jQuery.ajax({
            url: "/bibs-server/events/webappid",
            type: "GET",
            dataType: "json"
            });
        request.done(function( d ) {
            if( d !== "" || d !== null ){
                id = d;
            }
            if( d == "" ){
                jQuery(".show-live").hide();
            }
        });
        request.fail(function( jqXHR, textStatus ) {
            jQuery(".show-live").hide();
        });
    }

    function recreateNav(){
        jQuery("#bs-example-navbar-collapse-1 ul:first-child").prepend(jQuery("#child-1").children());
    }

    function initMap(){
        var latitude  = parseFloat('${event.latitude}');
        var longitude = parseFloat('${event.longitude}');

        L.mapbox.accessToken = 'pk.eyJ1IjoiYmlicyIsImEiOiJRcUxlU0ZFIn0.O_WdutmlIabHGa508B7Hlg';
        var map = L.mapbox.map('map', 'mapbox.streets', {
            zoomControl: true
        }).setView([latitude, longitude], 14);

        // add a marker:
        var myLayer = L.mapbox.featureLayer().addTo(map);
        var geojson = {
            type: 'FeatureCollection',
            features: [{
                type: 'Feature',
                properties: {
                    title: decodeURI("${event.address}"),
                    'marker-color': '#00dffc',
                    'marker-symbol': 'star'
                },
                geometry: {
                    type: 'Point',
                    coordinates: [longitude, latitude]
                }
            }]
        };

        myLayer.setGeoJSON(geojson);

        // Disable drag and zoom handlers.
        map.dragging.disable();
        map.touchZoom.disable();
        map.doubleClickZoom.disable();
        map.scrollWheelZoom.disable();

        // Disable tap handler, if present.
        if (map.tap) map.tap.disable();

        // fix map control UI bug
        jQuery('.leaflet-control-zoom-in').text('');
        jQuery('.leaflet-control-zoom-out').text('');
    }

    var eventStart = moment('${event.timeStartLocal}', 'MM/DD/YYYY hh:mm:ss a');
    function initDateTimePickers(){
        jQuery("#ECIStart")
            .datetimepicker({
                defaultDate: moment().startOf('day'),
                useSeconds: true,
                sideBySide: true
            });
        jQuery("#ECIEnd")
            .datetimepicker({
                defaultDate: eventStart,
                useSeconds: true,
                sideBySide: true
            });
        jQuery('#ECIEnd').data("DateTimePicker").setMinDate(jQuery("#ECIStart").data("DateTimePicker").getDate());
        jQuery('#ECIEnd').data("DateTimePicker").setMaxDate(eventStart);

        <!-- on change-ui -->
        jQuery("#ECIStart").on("dp.change",function (e) {
            jQuery('#ECIEnd').data("DateTimePicker").setMinDate(e.date);
        });
        jQuery("#ECIEnd").on("dp.change",function (e) {
            jQuery('#ECIStart').data("DateTimePicker").setMaxDate(e.date);
        });
    }

    function editForm(){
        window.location="/bibs-server/events/${event.id}?form";
    }
    function deleteEvent(){
        if( confirm('Are you sure you want to delete this item? This cannot be undone.') ){
            jQuery.ajax({
                url: "/bibs-server/events/${event.id}",
                type: "DELETE",
                dataType: "json",
                complete: function() {
                    window.location="/bibs-server/events";
                }
            });
        }
    }
    function redirectTicket(id){
        window.location="/bibs-server/eventitems/" + id +"#info";
    }
    function redirectReport(){
        window.location="/bibs-server/registrations/reports?event=${event.id}";
    }
    function redirectAthletes(){
        window.location="/bibs-server/raceresults?/myresults&amp;event=${event.id}";
    }
    function redirectLive(){
        window.location="/bibs-server/events/live?event=${event.id}";
    }
    function redirectImport(){
        window.location="/bibs-server/resultsfiles?form&amp;event=${event.id}";
    }
    function liveUrl(){
        jQuery("#liveResults").modal('show');
        var id = "";
        var request = jQuery.ajax({
            url: "/bibs-server/events/webappid",
            type: "GET",
            dataType: "json"
            });
        request.done(function( d ) {
            if( d !== "" || d !== null ){
                id = d;
                jQuery("#liveid").text(id);
            }
        });
        request.fail(function( jqXHR, textStatus ) {
        });
    }
    function waiverModal(){
        getWaiver();
        jQuery("#waiverModal").modal('show');
    }
    function emailModal(){
        jQuery('#emailModal').modal('show');
    }
    function bibsModal(){
        jQuery('#bibsModal').modal('show');
    }
    function closeModal(){
        jQuery('.modal').modal('hide');
    }
    function exportRegHandler(all, quick){
        var typeString = "";
        for( var i in currentExportRegTypes ){
            typeString += '&amp;type='+currentExportRegTypes[i];
        }
        var optString = "";
        if( jQuery('input[name="questions"]').prop('checked') ){
            optString += '&amp;questions=true';
        }else{
            optString += '&amp;questions=false';
        }
        if( jQuery('input[name="bibnum"]').prop('checked') ){
            optString += '&amp;bibnum=true';
        }else{
            optString += '&amp;bibnum=false';
        }
        var callUrl = "/bibs-server/cartitems/export?eventId=${event.id}&amp;all=false" + typeString + optString;
        if(all){
            callUrl = "/bibs-server/cartitems/export?eventId=${event.id}&amp;all=true" + typeString + optString;
        }
        if(quick){
        	callUrl = "/bibs-server/cartitems/export?eventId=${event.id}&amp;all=true&amp;quick=true" + "&amp;type=TICKET" + optString;
        }
        window.location=callUrl;
    }

    var currentExportRegTypes = [];
    function setExportRegType(val){
        jQuery('#card-ticket > .content').attr('style', 'background:none');
        jQuery('#card-tshirt > .content').attr('style', 'background:none');
        jQuery('#card-donation > .content').attr('style', 'background:none');
                    
        if(currentExportRegTypes.indexOf(val) == -1){
            currentExportRegTypes.push(val);
        }else{
            currentExportRegTypes.splice(currentExportRegTypes.indexOf(val), 1);
        }

        for( var i in currentExportRegTypes ){
            switch(currentExportRegTypes[i]){
                case 'TICKET':
                    jQuery('#card-ticket > .content').attr('style', 'background:#F0F0F0');
                    break;
                case 'T_SHIRT':
                    jQuery('#card-tshirt > .content').attr('style', 'background:#F0F0F0');
                    break;
                case 'DONATION':
                    jQuery('#card-donation > .content').attr('style', 'background:#F0F0F0');
                    break;
                default:
                    break;
            }
        }
    }

    function redirectEventTypeDetail(id){
        window.location="/bibs-server/eventitems/"+id +"#schedule";
    }

    function redirectDropboxImport(){
        window.location="/bibs-server/dropbox/filepicker?eventId=${event.id}";
    }
    function redirectDropboxDeauth(){
        jQuery.ajax({
            url: "/bibs-server/dropbox/deauth",
            type: "POST",
            dataType: "json",
            complete: function() {
                window.location.reload();
            }
        });
    }
    function exportAthletesHandler(){
        var type = jQuery('#exportAthletes-eventTypes').dropdown('get value');
        console.log(type);

        var callUrl = "/bibs-server/events/export?event=${event.id}";
        if(type !== null || type !== ""){
            window.location = callUrl + '&amp;type=' + type;
        }else{
            window.location = callUrl;
        }
    }
    
    function importAthletesHandler(){
        var type = jQuery('#importAthletes-eventTypes').dropdown('get value');
        console.log(type);

        var callUrl = "/bibs-server/resultsfiles?form&amp;event=${event.id}";
        if(type !== null || type !== ""){
            window.location = callUrl + '&amp;type=' + type;
        }else{
            window.location = callUrl;
        }
    }
    
    function redirectBackup(){
        window.location="/bibs-server/events/exportBackup?event=${event.id}";
    }   
    function redirectAwards(){
        window.location="/bibs-server/events/awards?event=${event.id}";
    }
    function redirectChangeFileMapping(){
        window.location="/bibs-server/resultsfilemappings/${lastMapping.id}?form";
    }
    function redirectEnableReg(){
        window.location="/bibs-server/events/${event.id}/enablereg";
    }
    function redirectDisableReg(){
        window.location="/bibs-server/events/${event.id}/disablereg";
    }
    function redirectEnableLive(){
        window.location="/bibs-server/events/${event.id}/enablelive";
    }
    function redirectDisableLive(){
        window.location="/bibs-server/events/${event.id}/disablelive";
    }
    function redirectEnableSync(){
        window.location="/bibs-server/events/${event.id}/enablesync";
    }
    function redirectDisableSync(){
        window.location="/bibs-server/events/${event.id}/disablesync";
    }        
    function redirectManageReg(){
        window.location="/bibs-server/eventitems?event=${event.id}";
    }
    function redirectBadges(){
        window.location="/bibs-server/badges/form";
    }
    function redirectSearchReg(){
        window.location="/bibs-server/registrations/search?event=${event.id}";
    }
    function cloud(){
        jQuery("#progress").show();
        var r = jQuery.ajax({
            url: "/bibs-server/events/cloud?event=${event.id}",
            type: "GET",
            dataType: "html"
            });
        r.done(function(data){
            jQuery("#progress").hide();
            if("true" == data){
                alert("Cloud Sync Complete.");
            }else if("eventnotfound" == data){
                alert("Event not found.");
            }else{
                alert("Cloud Sync Failed.");
            }
        });
        r.fail(function( s,s ) {
            jQuery("#progress").hide();
        });
    }
</script>
<c:if test='${(!build.rfid)}'>
    <!-- <c:set var="gmaps" value="https://maps.googleapis.com/maps/api/js?libraries=places&amp;sensor=false" /> -->
    <!-- <c:set var="geocomplete_url" value="/bibs-server/resources/scripts/jquery.geocomplete.js" /> -->
    <!-- <script src="${geocomplete_url}" type="text/javascript"><jsp:text/></script> -->
    <c:set var="mapbox" value="https://api.tiles.mapbox.com/mapbox.js/v2.1.9/mapbox.js" />
    <script src="${mapbox}" type="text/javascript"><jsp:text/></script>
</c:if>
</div>
